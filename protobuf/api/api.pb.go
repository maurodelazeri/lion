// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Orders struct {
	OrdersId             uint64           `protobuf:"varint,1,opt,name=orders_id,json=ordersId,proto3" json:"orders_id,omitempty"`
	Venue                Venue            `protobuf:"varint,2,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	AccountId            string           `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	OrdersType           OrderType        `protobuf:"varint,4,opt,name=orders_type,json=ordersType,proto3,enum=api.OrderType" json:"orders_type,omitempty"`
	OrdersState          OrderState       `protobuf:"varint,5,opt,name=orders_state,json=ordersState,proto3,enum=api.OrderState" json:"orders_state,omitempty"`
	TimeExpiration       uint64           `protobuf:"varint,6,opt,name=time_expiration,json=timeExpiration,proto3" json:"time_expiration,omitempty"`
	TimeSetup            uint64           `protobuf:"varint,8,opt,name=time_setup,json=timeSetup,proto3" json:"time_setup,omitempty"`
	OrdersTypeFilling    OrderTypeFilling `protobuf:"varint,9,opt,name=orders_type_filling,json=ordersTypeFilling,proto3,enum=api.OrderTypeFilling" json:"orders_type_filling,omitempty"`
	OrdersTypeTime       OrderTypeTime    `protobuf:"varint,10,opt,name=orders_type_time,json=ordersTypeTime,proto3,enum=api.OrderTypeTime" json:"orders_type_time,omitempty"`
	OrdersReason         Reason           `protobuf:"varint,11,opt,name=orders_reason,json=ordersReason,proto3,enum=api.Reason" json:"orders_reason,omitempty"`
	OrdersPositionById   uint64           `protobuf:"varint,12,opt,name=orders_position_by_id,json=ordersPositionById,proto3" json:"orders_position_by_id,omitempty"`
	OrdersPositionId     uint64           `protobuf:"varint,13,opt,name=orders_position_id,json=ordersPositionId,proto3" json:"orders_position_id,omitempty"`
	Product              Product          `protobuf:"varint,14,opt,name=product,proto3,enum=api.Product" json:"product,omitempty"`
	VenueExecutionId     string           `protobuf:"bytes,15,opt,name=venue_execution_id,json=venueExecutionId,proto3" json:"venue_execution_id,omitempty"`
	Volume               float64          `protobuf:"fixed64,16,opt,name=volume,proto3" json:"volume,omitempty"`
	Price                float64          `protobuf:"fixed64,17,opt,name=price,proto3" json:"price,omitempty"`
	Fee                  float64          `protobuf:"fixed64,18,opt,name=fee,proto3" json:"fee,omitempty"`
	Tp                   float64          `protobuf:"fixed64,19,opt,name=tp,proto3" json:"tp,omitempty"`
	Sl                   float64          `protobuf:"fixed64,20,opt,name=sl,proto3" json:"sl,omitempty"`
	TraillingPercent     float64          `protobuf:"fixed64,21,opt,name=trailling_percent,json=traillingPercent,proto3" json:"trailling_percent,omitempty"`
	StopLimit            float64          `protobuf:"fixed64,22,opt,name=stop_limit,json=stopLimit,proto3" json:"stop_limit,omitempty"`
	Comment              string           `protobuf:"bytes,23,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Orders) Reset()         { *m = Orders{} }
func (m *Orders) String() string { return proto.CompactTextString(m) }
func (*Orders) ProtoMessage()    {}
func (*Orders) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}
func (m *Orders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Orders.Unmarshal(m, b)
}
func (m *Orders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Orders.Marshal(b, m, deterministic)
}
func (dst *Orders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Orders.Merge(dst, src)
}
func (m *Orders) XXX_Size() int {
	return xxx_messageInfo_Orders.Size(m)
}
func (m *Orders) XXX_DiscardUnknown() {
	xxx_messageInfo_Orders.DiscardUnknown(m)
}

var xxx_messageInfo_Orders proto.InternalMessageInfo

func (m *Orders) GetOrdersId() uint64 {
	if m != nil {
		return m.OrdersId
	}
	return 0
}

func (m *Orders) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *Orders) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Orders) GetOrdersType() OrderType {
	if m != nil {
		return m.OrdersType
	}
	return OrderType_MARKET
}

func (m *Orders) GetOrdersState() OrderState {
	if m != nil {
		return m.OrdersState
	}
	return OrderState_STARTED
}

func (m *Orders) GetTimeExpiration() uint64 {
	if m != nil {
		return m.TimeExpiration
	}
	return 0
}

func (m *Orders) GetTimeSetup() uint64 {
	if m != nil {
		return m.TimeSetup
	}
	return 0
}

func (m *Orders) GetOrdersTypeFilling() OrderTypeFilling {
	if m != nil {
		return m.OrdersTypeFilling
	}
	return OrderTypeFilling_FOK
}

func (m *Orders) GetOrdersTypeTime() OrderTypeTime {
	if m != nil {
		return m.OrdersTypeTime
	}
	return OrderTypeTime_GTC
}

func (m *Orders) GetOrdersReason() Reason {
	if m != nil {
		return m.OrdersReason
	}
	return Reason_ORDER_CLIENT
}

func (m *Orders) GetOrdersPositionById() uint64 {
	if m != nil {
		return m.OrdersPositionById
	}
	return 0
}

func (m *Orders) GetOrdersPositionId() uint64 {
	if m != nil {
		return m.OrdersPositionId
	}
	return 0
}

func (m *Orders) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_BTC_USD
}

func (m *Orders) GetVenueExecutionId() string {
	if m != nil {
		return m.VenueExecutionId
	}
	return ""
}

func (m *Orders) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Orders) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Orders) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *Orders) GetTp() float64 {
	if m != nil {
		return m.Tp
	}
	return 0
}

func (m *Orders) GetSl() float64 {
	if m != nil {
		return m.Sl
	}
	return 0
}

func (m *Orders) GetTraillingPercent() float64 {
	if m != nil {
		return m.TraillingPercent
	}
	return 0
}

func (m *Orders) GetStopLimit() float64 {
	if m != nil {
		return m.StopLimit
	}
	return 0
}

func (m *Orders) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type OrderRequest struct {
	Action               TradeAction      `protobuf:"varint,1,opt,name=action,proto3,enum=api.TradeAction" json:"action,omitempty"`
	Venue                Venue            `protobuf:"varint,2,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	Product              Product          `protobuf:"varint,3,opt,name=product,proto3,enum=api.Product" json:"product,omitempty"`
	Order                uint64           `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	Volume               float64          `protobuf:"fixed64,5,opt,name=volume,proto3" json:"volume,omitempty"`
	Price                float64          `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	Stoplimit            float64          `protobuf:"fixed64,7,opt,name=stoplimit,proto3" json:"stoplimit,omitempty"`
	Sl                   float64          `protobuf:"fixed64,8,opt,name=sl,proto3" json:"sl,omitempty"`
	Tp                   float64          `protobuf:"fixed64,9,opt,name=tp,proto3" json:"tp,omitempty"`
	TraillingPercent     float64          `protobuf:"fixed64,10,opt,name=trailling_percent,json=traillingPercent,proto3" json:"trailling_percent,omitempty"`
	Deviation            uint64           `protobuf:"varint,11,opt,name=deviation,proto3" json:"deviation,omitempty"`
	OrderType            OrderType        `protobuf:"varint,12,opt,name=order_type,json=orderType,proto3,enum=api.OrderType" json:"order_type,omitempty"`
	OrderSide            Side             `protobuf:"varint,13,opt,name=order_side,json=orderSide,proto3,enum=api.Side" json:"order_side,omitempty"`
	OrderTypeFilling     OrderTypeFilling `protobuf:"varint,14,opt,name=order_type_filling,json=orderTypeFilling,proto3,enum=api.OrderTypeFilling" json:"order_type_filling,omitempty"`
	OrderTypeTime        OrderTypeTime    `protobuf:"varint,15,opt,name=order_type_time,json=orderTypeTime,proto3,enum=api.OrderTypeTime" json:"order_type_time,omitempty"`
	OrderReason          Reason           `protobuf:"varint,16,opt,name=order_reason,json=orderReason,proto3,enum=api.Reason" json:"order_reason,omitempty"`
	Expiration           uint64           `protobuf:"varint,17,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Comment              string           `protobuf:"bytes,18,opt,name=comment,proto3" json:"comment,omitempty"`
	Position             uint64           `protobuf:"varint,19,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OrderRequest) Reset()         { *m = OrderRequest{} }
func (m *OrderRequest) String() string { return proto.CompactTextString(m) }
func (*OrderRequest) ProtoMessage()    {}
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}
func (m *OrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderRequest.Unmarshal(m, b)
}
func (m *OrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderRequest.Marshal(b, m, deterministic)
}
func (dst *OrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderRequest.Merge(dst, src)
}
func (m *OrderRequest) XXX_Size() int {
	return xxx_messageInfo_OrderRequest.Size(m)
}
func (m *OrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderRequest proto.InternalMessageInfo

func (m *OrderRequest) GetAction() TradeAction {
	if m != nil {
		return m.Action
	}
	return TradeAction_DEAL
}

func (m *OrderRequest) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *OrderRequest) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_BTC_USD
}

func (m *OrderRequest) GetOrder() uint64 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *OrderRequest) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *OrderRequest) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OrderRequest) GetStoplimit() float64 {
	if m != nil {
		return m.Stoplimit
	}
	return 0
}

func (m *OrderRequest) GetSl() float64 {
	if m != nil {
		return m.Sl
	}
	return 0
}

func (m *OrderRequest) GetTp() float64 {
	if m != nil {
		return m.Tp
	}
	return 0
}

func (m *OrderRequest) GetTraillingPercent() float64 {
	if m != nil {
		return m.TraillingPercent
	}
	return 0
}

func (m *OrderRequest) GetDeviation() uint64 {
	if m != nil {
		return m.Deviation
	}
	return 0
}

func (m *OrderRequest) GetOrderType() OrderType {
	if m != nil {
		return m.OrderType
	}
	return OrderType_MARKET
}

func (m *OrderRequest) GetOrderSide() Side {
	if m != nil {
		return m.OrderSide
	}
	return Side_BUY
}

func (m *OrderRequest) GetOrderTypeFilling() OrderTypeFilling {
	if m != nil {
		return m.OrderTypeFilling
	}
	return OrderTypeFilling_FOK
}

func (m *OrderRequest) GetOrderTypeTime() OrderTypeTime {
	if m != nil {
		return m.OrderTypeTime
	}
	return OrderTypeTime_GTC
}

func (m *OrderRequest) GetOrderReason() Reason {
	if m != nil {
		return m.OrderReason
	}
	return Reason_ORDER_CLIENT
}

func (m *OrderRequest) GetExpiration() uint64 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

func (m *OrderRequest) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *OrderRequest) GetPosition() uint64 {
	if m != nil {
		return m.Position
	}
	return 0
}

type OrderResult struct {
	Retcode              Retcode    `protobuf:"varint,1,opt,name=retcode,proto3,enum=api.Retcode" json:"retcode,omitempty"`
	Price                float64    `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	Volume               float64    `protobuf:"fixed64,3,opt,name=volume,proto3" json:"volume,omitempty"`
	Fee                  float64    `protobuf:"fixed64,4,opt,name=fee,proto3" json:"fee,omitempty"`
	State                OrderState `protobuf:"varint,5,opt,name=state,proto3,enum=api.OrderState" json:"state,omitempty"`
	PositionId           string     `protobuf:"bytes,6,opt,name=position_id,json=positionId,proto3" json:"position_id,omitempty"`
	BrokerExecutionId    string     `protobuf:"bytes,7,opt,name=broker_execution_id,json=brokerExecutionId,proto3" json:"broker_execution_id,omitempty"`
	Comment              string     `protobuf:"bytes,8,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *OrderResult) Reset()         { *m = OrderResult{} }
func (m *OrderResult) String() string { return proto.CompactTextString(m) }
func (*OrderResult) ProtoMessage()    {}
func (*OrderResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}
func (m *OrderResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderResult.Unmarshal(m, b)
}
func (m *OrderResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderResult.Marshal(b, m, deterministic)
}
func (dst *OrderResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderResult.Merge(dst, src)
}
func (m *OrderResult) XXX_Size() int {
	return xxx_messageInfo_OrderResult.Size(m)
}
func (m *OrderResult) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderResult.DiscardUnknown(m)
}

var xxx_messageInfo_OrderResult proto.InternalMessageInfo

func (m *OrderResult) GetRetcode() Retcode {
	if m != nil {
		return m.Retcode
	}
	return Retcode_REJECTX
}

func (m *OrderResult) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OrderResult) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *OrderResult) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *OrderResult) GetState() OrderState {
	if m != nil {
		return m.State
	}
	return OrderState_STARTED
}

func (m *OrderResult) GetPositionId() string {
	if m != nil {
		return m.PositionId
	}
	return ""
}

func (m *OrderResult) GetBrokerExecutionId() string {
	if m != nil {
		return m.BrokerExecutionId
	}
	return ""
}

func (m *OrderResult) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type Position struct {
	PositionId           uint64    `protobuf:"varint,1,opt,name=position_id,json=positionId,proto3" json:"position_id,omitempty"`
	Venue                Venue     `protobuf:"varint,2,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	Account              string    `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	PositionTime         uint64    `protobuf:"varint,4,opt,name=position_time,json=positionTime,proto3" json:"position_time,omitempty"`
	PositionSide         Side      `protobuf:"varint,5,opt,name=position_side,json=positionSide,proto3,enum=api.Side" json:"position_side,omitempty"`
	PositionReason       Reason    `protobuf:"varint,6,opt,name=position_reason,json=positionReason,proto3,enum=api.Reason" json:"position_reason,omitempty"`
	Volume               float64   `protobuf:"fixed64,7,opt,name=volume,proto3" json:"volume,omitempty"`
	Price                float64   `protobuf:"fixed64,8,opt,name=price,proto3" json:"price,omitempty"`
	Tp                   float64   `protobuf:"fixed64,9,opt,name=tp,proto3" json:"tp,omitempty"`
	Sl                   float64   `protobuf:"fixed64,10,opt,name=sl,proto3" json:"sl,omitempty"`
	Swap                 float64   `protobuf:"fixed64,11,opt,name=swap,proto3" json:"swap,omitempty"`
	Product              Product   `protobuf:"varint,12,opt,name=product,proto3,enum=api.Product" json:"product,omitempty"`
	Comment              string    `protobuf:"bytes,13,opt,name=comment,proto3" json:"comment,omitempty"`
	Orders               []*Orders `protobuf:"bytes,14,rep,name=Orders,proto3" json:"Orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}
func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (dst *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(dst, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetPositionId() uint64 {
	if m != nil {
		return m.PositionId
	}
	return 0
}

func (m *Position) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *Position) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *Position) GetPositionTime() uint64 {
	if m != nil {
		return m.PositionTime
	}
	return 0
}

func (m *Position) GetPositionSide() Side {
	if m != nil {
		return m.PositionSide
	}
	return Side_BUY
}

func (m *Position) GetPositionReason() Reason {
	if m != nil {
		return m.PositionReason
	}
	return Reason_ORDER_CLIENT
}

func (m *Position) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Position) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Position) GetTp() float64 {
	if m != nil {
		return m.Tp
	}
	return 0
}

func (m *Position) GetSl() float64 {
	if m != nil {
		return m.Sl
	}
	return 0
}

func (m *Position) GetSwap() float64 {
	if m != nil {
		return m.Swap
	}
	return 0
}

func (m *Position) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_BTC_USD
}

func (m *Position) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Position) GetOrders() []*Orders {
	if m != nil {
		return m.Orders
	}
	return nil
}

type PositionRequest struct {
	Venue                Venue    `protobuf:"varint,1,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	Product              Product  `protobuf:"varint,2,opt,name=product,proto3,enum=api.Product" json:"product,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionRequest) Reset()         { *m = PositionRequest{} }
func (m *PositionRequest) String() string { return proto.CompactTextString(m) }
func (*PositionRequest) ProtoMessage()    {}
func (*PositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}
func (m *PositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionRequest.Unmarshal(m, b)
}
func (m *PositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionRequest.Marshal(b, m, deterministic)
}
func (dst *PositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionRequest.Merge(dst, src)
}
func (m *PositionRequest) XXX_Size() int {
	return xxx_messageInfo_PositionRequest.Size(m)
}
func (m *PositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PositionRequest proto.InternalMessageInfo

func (m *PositionRequest) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *PositionRequest) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_BTC_USD
}

type PositionsResult struct {
	Retcode              Retcode     `protobuf:"varint,1,opt,name=retcode,proto3,enum=api.Retcode" json:"retcode,omitempty"`
	Positions            []*Position `protobuf:"bytes,2,rep,name=positions,proto3" json:"positions,omitempty"`
	Comment              string      `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PositionsResult) Reset()         { *m = PositionsResult{} }
func (m *PositionsResult) String() string { return proto.CompactTextString(m) }
func (*PositionsResult) ProtoMessage()    {}
func (*PositionsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}
func (m *PositionsResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsResult.Unmarshal(m, b)
}
func (m *PositionsResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsResult.Marshal(b, m, deterministic)
}
func (dst *PositionsResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsResult.Merge(dst, src)
}
func (m *PositionsResult) XXX_Size() int {
	return xxx_messageInfo_PositionsResult.Size(m)
}
func (m *PositionsResult) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsResult.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsResult proto.InternalMessageInfo

func (m *PositionsResult) GetRetcode() Retcode {
	if m != nil {
		return m.Retcode
	}
	return Retcode_REJECTX
}

func (m *PositionsResult) GetPositions() []*Position {
	if m != nil {
		return m.Positions
	}
	return nil
}

func (m *PositionsResult) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type AccountRequest struct {
	Venue                Venue    `protobuf:"varint,1,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountRequest) Reset()         { *m = AccountRequest{} }
func (m *AccountRequest) String() string { return proto.CompactTextString(m) }
func (*AccountRequest) ProtoMessage()    {}
func (*AccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}
func (m *AccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountRequest.Unmarshal(m, b)
}
func (m *AccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountRequest.Marshal(b, m, deterministic)
}
func (dst *AccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountRequest.Merge(dst, src)
}
func (m *AccountRequest) XXX_Size() int {
	return xxx_messageInfo_AccountRequest.Size(m)
}
func (m *AccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountRequest proto.InternalMessageInfo

func (m *AccountRequest) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

type AccountResult struct {
	Retcode              Retcode  `protobuf:"varint,1,opt,name=retcode,proto3,enum=api.Retcode" json:"retcode,omitempty"`
	Account              *Account `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Comment              string   `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountResult) Reset()         { *m = AccountResult{} }
func (m *AccountResult) String() string { return proto.CompactTextString(m) }
func (*AccountResult) ProtoMessage()    {}
func (*AccountResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}
func (m *AccountResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountResult.Unmarshal(m, b)
}
func (m *AccountResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountResult.Marshal(b, m, deterministic)
}
func (dst *AccountResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountResult.Merge(dst, src)
}
func (m *AccountResult) XXX_Size() int {
	return xxx_messageInfo_AccountResult.Size(m)
}
func (m *AccountResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountResult.DiscardUnknown(m)
}

var xxx_messageInfo_AccountResult proto.InternalMessageInfo

func (m *AccountResult) GetRetcode() Retcode {
	if m != nil {
		return m.Retcode
	}
	return Retcode_REJECTX
}

func (m *AccountResult) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *AccountResult) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type ProductRequest struct {
	Venue                Venue    `protobuf:"varint,1,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	Product              Product  `protobuf:"varint,2,opt,name=product,proto3,enum=api.Product" json:"product,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductRequest) Reset()         { *m = ProductRequest{} }
func (m *ProductRequest) String() string { return proto.CompactTextString(m) }
func (*ProductRequest) ProtoMessage()    {}
func (*ProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}
func (m *ProductRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductRequest.Unmarshal(m, b)
}
func (m *ProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductRequest.Marshal(b, m, deterministic)
}
func (dst *ProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductRequest.Merge(dst, src)
}
func (m *ProductRequest) XXX_Size() int {
	return xxx_messageInfo_ProductRequest.Size(m)
}
func (m *ProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProductRequest proto.InternalMessageInfo

func (m *ProductRequest) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *ProductRequest) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_BTC_USD
}

type ProductResult struct {
	Retcode              Retcode       `protobuf:"varint,1,opt,name=retcode,proto3,enum=api.Retcode" json:"retcode,omitempty"`
	VenueProducts        *VenueProduct `protobuf:"bytes,2,opt,name=venue_products,json=venueProducts,proto3" json:"venue_products,omitempty"`
	Comment              string        `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ProductResult) Reset()         { *m = ProductResult{} }
func (m *ProductResult) String() string { return proto.CompactTextString(m) }
func (*ProductResult) ProtoMessage()    {}
func (*ProductResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}
func (m *ProductResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductResult.Unmarshal(m, b)
}
func (m *ProductResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductResult.Marshal(b, m, deterministic)
}
func (dst *ProductResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductResult.Merge(dst, src)
}
func (m *ProductResult) XXX_Size() int {
	return xxx_messageInfo_ProductResult.Size(m)
}
func (m *ProductResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductResult.DiscardUnknown(m)
}

var xxx_messageInfo_ProductResult proto.InternalMessageInfo

func (m *ProductResult) GetRetcode() Retcode {
	if m != nil {
		return m.Retcode
	}
	return Retcode_REJECTX
}

func (m *ProductResult) GetVenueProducts() *VenueProduct {
	if m != nil {
		return m.VenueProducts
	}
	return nil
}

func (m *ProductResult) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type VenueProduct struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	IndividualConnection bool     `protobuf:"varint,2,opt,name=individual_connection,json=individualConnection,proto3" json:"individual_connection,omitempty"`
	MinimumOrdersSize    float64  `protobuf:"fixed64,3,opt,name=minimum_orders_size,json=minimumOrdersSize,proto3" json:"minimum_orders_size,omitempty"`
	StepSize             float64  `protobuf:"fixed64,4,opt,name=step_size,json=stepSize,proto3" json:"step_size,omitempty"`
	MakerFee             float64  `protobuf:"fixed64,5,opt,name=maker_fee,json=makerFee,proto3" json:"maker_fee,omitempty"`
	TakerFee             float64  `protobuf:"fixed64,6,opt,name=taker_fee,json=takerFee,proto3" json:"taker_fee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VenueProduct) Reset()         { *m = VenueProduct{} }
func (m *VenueProduct) String() string { return proto.CompactTextString(m) }
func (*VenueProduct) ProtoMessage()    {}
func (*VenueProduct) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}
func (m *VenueProduct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VenueProduct.Unmarshal(m, b)
}
func (m *VenueProduct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VenueProduct.Marshal(b, m, deterministic)
}
func (dst *VenueProduct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VenueProduct.Merge(dst, src)
}
func (m *VenueProduct) XXX_Size() int {
	return xxx_messageInfo_VenueProduct.Size(m)
}
func (m *VenueProduct) XXX_DiscardUnknown() {
	xxx_messageInfo_VenueProduct.DiscardUnknown(m)
}

var xxx_messageInfo_VenueProduct proto.InternalMessageInfo

func (m *VenueProduct) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *VenueProduct) GetIndividualConnection() bool {
	if m != nil {
		return m.IndividualConnection
	}
	return false
}

func (m *VenueProduct) GetMinimumOrdersSize() float64 {
	if m != nil {
		return m.MinimumOrdersSize
	}
	return 0
}

func (m *VenueProduct) GetStepSize() float64 {
	if m != nil {
		return m.StepSize
	}
	return 0
}

func (m *VenueProduct) GetMakerFee() float64 {
	if m != nil {
		return m.MakerFee
	}
	return 0
}

func (m *VenueProduct) GetTakerFee() float64 {
	if m != nil {
		return m.TakerFee
	}
	return 0
}

type HistoricalTradesRequest struct {
	Venue                Venue    `protobuf:"varint,1,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	Product              Product  `protobuf:"varint,2,opt,name=product,proto3,enum=api.Product" json:"product,omitempty"`
	Begin                uint64   `protobuf:"varint,3,opt,name=begin,proto3" json:"begin,omitempty"`
	End                  uint64   `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoricalTradesRequest) Reset()         { *m = HistoricalTradesRequest{} }
func (m *HistoricalTradesRequest) String() string { return proto.CompactTextString(m) }
func (*HistoricalTradesRequest) ProtoMessage()    {}
func (*HistoricalTradesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}
func (m *HistoricalTradesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricalTradesRequest.Unmarshal(m, b)
}
func (m *HistoricalTradesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricalTradesRequest.Marshal(b, m, deterministic)
}
func (dst *HistoricalTradesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricalTradesRequest.Merge(dst, src)
}
func (m *HistoricalTradesRequest) XXX_Size() int {
	return xxx_messageInfo_HistoricalTradesRequest.Size(m)
}
func (m *HistoricalTradesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricalTradesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricalTradesRequest proto.InternalMessageInfo

func (m *HistoricalTradesRequest) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *HistoricalTradesRequest) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_BTC_USD
}

func (m *HistoricalTradesRequest) GetBegin() uint64 {
	if m != nil {
		return m.Begin
	}
	return 0
}

func (m *HistoricalTradesRequest) GetEnd() uint64 {
	if m != nil {
		return m.End
	}
	return 0
}

type HistoricalTradesResult struct {
	Retcode              Retcode  `protobuf:"varint,1,opt,name=retcode,proto3,enum=api.Retcode" json:"retcode,omitempty"`
	Trades               *Trade   `protobuf:"bytes,2,opt,name=trades,proto3" json:"trades,omitempty"`
	Comment              string   `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoricalTradesResult) Reset()         { *m = HistoricalTradesResult{} }
func (m *HistoricalTradesResult) String() string { return proto.CompactTextString(m) }
func (*HistoricalTradesResult) ProtoMessage()    {}
func (*HistoricalTradesResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}
func (m *HistoricalTradesResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricalTradesResult.Unmarshal(m, b)
}
func (m *HistoricalTradesResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricalTradesResult.Marshal(b, m, deterministic)
}
func (dst *HistoricalTradesResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricalTradesResult.Merge(dst, src)
}
func (m *HistoricalTradesResult) XXX_Size() int {
	return xxx_messageInfo_HistoricalTradesResult.Size(m)
}
func (m *HistoricalTradesResult) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricalTradesResult.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricalTradesResult proto.InternalMessageInfo

func (m *HistoricalTradesResult) GetRetcode() Retcode {
	if m != nil {
		return m.Retcode
	}
	return Retcode_REJECTX
}

func (m *HistoricalTradesResult) GetTrades() *Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

func (m *HistoricalTradesResult) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type User struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Accounts             []*Account `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type Account struct {
	AccountId            string                   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountType          AccountType              `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3,enum=api.AccountType" json:"account_type,omitempty"`
	AccountMode          AccountMode              `protobuf:"varint,3,opt,name=account_mode,json=accountMode,proto3,enum=api.AccountMode" json:"account_mode,omitempty"`
	Balances             map[string]*VenueBalance `protobuf:"bytes,4,rep,name=balances,proto3" json:"balances,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Active               bool                     `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}
func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (dst *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(dst, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Account) GetAccountType() AccountType {
	if m != nil {
		return m.AccountType
	}
	return AccountType_NET
}

func (m *Account) GetAccountMode() AccountMode {
	if m != nil {
		return m.AccountMode
	}
	return AccountMode_LIVE
}

func (m *Account) GetBalances() map[string]*VenueBalance {
	if m != nil {
		return m.Balances
	}
	return nil
}

func (m *Account) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type VenueBalance struct {
	Id                   Venue               `protobuf:"varint,1,opt,name=id,proto3,enum=api.Venue" json:"id,omitempty"`
	Currency             map[string]*Balance `protobuf:"bytes,2,rep,name=currency,proto3" json:"currency,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *VenueBalance) Reset()         { *m = VenueBalance{} }
func (m *VenueBalance) String() string { return proto.CompactTextString(m) }
func (*VenueBalance) ProtoMessage()    {}
func (*VenueBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}
func (m *VenueBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VenueBalance.Unmarshal(m, b)
}
func (m *VenueBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VenueBalance.Marshal(b, m, deterministic)
}
func (dst *VenueBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VenueBalance.Merge(dst, src)
}
func (m *VenueBalance) XXX_Size() int {
	return xxx_messageInfo_VenueBalance.Size(m)
}
func (m *VenueBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_VenueBalance.DiscardUnknown(m)
}

var xxx_messageInfo_VenueBalance proto.InternalMessageInfo

func (m *VenueBalance) GetId() Venue {
	if m != nil {
		return m.Id
	}
	return Venue_DARKPOOL
}

func (m *VenueBalance) GetCurrency() map[string]*Balance {
	if m != nil {
		return m.Currency
	}
	return nil
}

type Balance struct {
	Available            float64  `protobuf:"fixed64,1,opt,name=available,proto3" json:"available,omitempty"`
	Hold                 float64  `protobuf:"fixed64,2,opt,name=hold,proto3" json:"hold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Balance) Reset()         { *m = Balance{} }
func (m *Balance) String() string { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()    {}
func (*Balance) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}
func (m *Balance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Balance.Unmarshal(m, b)
}
func (m *Balance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Balance.Marshal(b, m, deterministic)
}
func (dst *Balance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Balance.Merge(dst, src)
}
func (m *Balance) XXX_Size() int {
	return xxx_messageInfo_Balance.Size(m)
}
func (m *Balance) XXX_DiscardUnknown() {
	xxx_messageInfo_Balance.DiscardUnknown(m)
}

var xxx_messageInfo_Balance proto.InternalMessageInfo

func (m *Balance) GetAvailable() float64 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *Balance) GetHold() float64 {
	if m != nil {
		return m.Hold
	}
	return 0
}

// Market Data
type Item struct {
	Amount               float64  `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Price                float64  `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{17}
}
func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (dst *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(dst, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Item) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type Subscription struct {
	Subscribe            []*SubscriptionItems `protobuf:"bytes,1,rep,name=subscribe,proto3" json:"subscribe,omitempty"`
	CandleGroupBy        CandleGroupBy        `protobuf:"varint,2,opt,name=candle_group_by,json=candleGroupBy,proto3,enum=api.CandleGroupBy" json:"candle_group_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{18}
}
func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (dst *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(dst, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetSubscribe() []*SubscriptionItems {
	if m != nil {
		return m.Subscribe
	}
	return nil
}

func (m *Subscription) GetCandleGroupBy() CandleGroupBy {
	if m != nil {
		return m.CandleGroupBy
	}
	return CandleGroupBy_TIME
}

type SubscriptionItems struct {
	Venue                Venue    `protobuf:"varint,1,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	Product              Product  `protobuf:"varint,2,opt,name=product,proto3,enum=api.Product" json:"product,omitempty"`
	Orderbook            bool     `protobuf:"varint,3,opt,name=orderbook,proto3" json:"orderbook,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriptionItems) Reset()         { *m = SubscriptionItems{} }
func (m *SubscriptionItems) String() string { return proto.CompactTextString(m) }
func (*SubscriptionItems) ProtoMessage()    {}
func (*SubscriptionItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{19}
}
func (m *SubscriptionItems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionItems.Unmarshal(m, b)
}
func (m *SubscriptionItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionItems.Marshal(b, m, deterministic)
}
func (dst *SubscriptionItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionItems.Merge(dst, src)
}
func (m *SubscriptionItems) XXX_Size() int {
	return xxx_messageInfo_SubscriptionItems.Size(m)
}
func (m *SubscriptionItems) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionItems.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionItems proto.InternalMessageInfo

func (m *SubscriptionItems) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *SubscriptionItems) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_BTC_USD
}

func (m *SubscriptionItems) GetOrderbook() bool {
	if m != nil {
		return m.Orderbook
	}
	return false
}

type Orderbook struct {
	Product              Product   `protobuf:"varint,1,opt,name=product,proto3,enum=api.Product" json:"product,omitempty"`
	Venue                Venue     `protobuf:"varint,2,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	Timestamp            uint64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Levels               uint32    `protobuf:"varint,4,opt,name=levels,proto3" json:"levels,omitempty"`
	Asks                 []*Item   `protobuf:"bytes,5,rep,name=asks,proto3" json:"asks,omitempty"`
	Bids                 []*Item   `protobuf:"bytes,6,rep,name=bids,proto3" json:"bids,omitempty"`
	VenueType            VenueType `protobuf:"varint,7,opt,name=venue_type,json=venueType,proto3,enum=api.VenueType" json:"venue_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Orderbook) Reset()         { *m = Orderbook{} }
func (m *Orderbook) String() string { return proto.CompactTextString(m) }
func (*Orderbook) ProtoMessage()    {}
func (*Orderbook) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{20}
}
func (m *Orderbook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Orderbook.Unmarshal(m, b)
}
func (m *Orderbook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Orderbook.Marshal(b, m, deterministic)
}
func (dst *Orderbook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Orderbook.Merge(dst, src)
}
func (m *Orderbook) XXX_Size() int {
	return xxx_messageInfo_Orderbook.Size(m)
}
func (m *Orderbook) XXX_DiscardUnknown() {
	xxx_messageInfo_Orderbook.DiscardUnknown(m)
}

var xxx_messageInfo_Orderbook proto.InternalMessageInfo

func (m *Orderbook) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_BTC_USD
}

func (m *Orderbook) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *Orderbook) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Orderbook) GetLevels() uint32 {
	if m != nil {
		return m.Levels
	}
	return 0
}

func (m *Orderbook) GetAsks() []*Item {
	if m != nil {
		return m.Asks
	}
	return nil
}

func (m *Orderbook) GetBids() []*Item {
	if m != nil {
		return m.Bids
	}
	return nil
}

func (m *Orderbook) GetVenueType() VenueType {
	if m != nil {
		return m.VenueType
	}
	return VenueType_SPOT
}

type Trade struct {
	Product              Product   `protobuf:"varint,1,opt,name=product,proto3,enum=api.Product" json:"product,omitempty"`
	Venue                Venue     `protobuf:"varint,2,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	Timestamp            uint64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Price                float64   `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Size                 float64   `protobuf:"fixed64,5,opt,name=size,proto3" json:"size,omitempty"`
	OrderSide            Side      `protobuf:"varint,6,opt,name=order_side,json=orderSide,proto3,enum=api.Side" json:"order_side,omitempty"`
	VenueType            VenueType `protobuf:"varint,7,opt,name=venue_type,json=venueType,proto3,enum=api.VenueType" json:"venue_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Trade) Reset()         { *m = Trade{} }
func (m *Trade) String() string { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()    {}
func (*Trade) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{21}
}
func (m *Trade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trade.Unmarshal(m, b)
}
func (m *Trade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trade.Marshal(b, m, deterministic)
}
func (dst *Trade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trade.Merge(dst, src)
}
func (m *Trade) XXX_Size() int {
	return xxx_messageInfo_Trade.Size(m)
}
func (m *Trade) XXX_DiscardUnknown() {
	xxx_messageInfo_Trade.DiscardUnknown(m)
}

var xxx_messageInfo_Trade proto.InternalMessageInfo

func (m *Trade) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_BTC_USD
}

func (m *Trade) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *Trade) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Trade) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Trade) GetSize() float64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Trade) GetOrderSide() Side {
	if m != nil {
		return m.OrderSide
	}
	return Side_BUY
}

func (m *Trade) GetVenueType() VenueType {
	if m != nil {
		return m.VenueType
	}
	return VenueType_SPOT
}

type Ticker struct {
	Product              Product   `protobuf:"varint,1,opt,name=product,proto3,enum=api.Product" json:"product,omitempty"`
	Venue                Venue     `protobuf:"varint,2,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	Timestamp            uint64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Price                float64   `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	OrderSide            Side      `protobuf:"varint,5,opt,name=order_side,json=orderSide,proto3,enum=api.Side" json:"order_side,omitempty"`
	BestBid              float64   `protobuf:"fixed64,6,opt,name=best_bid,json=bestBid,proto3" json:"best_bid,omitempty"`
	BestAsk              float64   `protobuf:"fixed64,7,opt,name=best_ask,json=bestAsk,proto3" json:"best_ask,omitempty"`
	VenueType            VenueType `protobuf:"varint,8,opt,name=venue_type,json=venueType,proto3,enum=api.VenueType" json:"venue_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Ticker) Reset()         { *m = Ticker{} }
func (m *Ticker) String() string { return proto.CompactTextString(m) }
func (*Ticker) ProtoMessage()    {}
func (*Ticker) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{22}
}
func (m *Ticker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ticker.Unmarshal(m, b)
}
func (m *Ticker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ticker.Marshal(b, m, deterministic)
}
func (dst *Ticker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ticker.Merge(dst, src)
}
func (m *Ticker) XXX_Size() int {
	return xxx_messageInfo_Ticker.Size(m)
}
func (m *Ticker) XXX_DiscardUnknown() {
	xxx_messageInfo_Ticker.DiscardUnknown(m)
}

var xxx_messageInfo_Ticker proto.InternalMessageInfo

func (m *Ticker) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_BTC_USD
}

func (m *Ticker) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *Ticker) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Ticker) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Ticker) GetOrderSide() Side {
	if m != nil {
		return m.OrderSide
	}
	return Side_BUY
}

func (m *Ticker) GetBestBid() float64 {
	if m != nil {
		return m.BestBid
	}
	return 0
}

func (m *Ticker) GetBestAsk() float64 {
	if m != nil {
		return m.BestAsk
	}
	return 0
}

func (m *Ticker) GetVenueType() VenueType {
	if m != nil {
		return m.VenueType
	}
	return VenueType_SPOT
}

type Candle struct {
	Venue                Venue    `protobuf:"varint,1,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	Product              Product  `protobuf:"varint,2,opt,name=product,proto3,enum=api.Product" json:"product,omitempty"`
	Granularity          int32    `protobuf:"varint,3,opt,name=granularity,proto3" json:"granularity,omitempty"`
	Point                int32    `protobuf:"varint,4,opt,name=point,proto3" json:"point,omitempty"`
	Open                 float64  `protobuf:"fixed64,5,opt,name=open,proto3" json:"open,omitempty"`
	Close                float64  `protobuf:"fixed64,6,opt,name=close,proto3" json:"close,omitempty"`
	High                 float64  `protobuf:"fixed64,7,opt,name=high,proto3" json:"high,omitempty"`
	Low                  float64  `protobuf:"fixed64,8,opt,name=low,proto3" json:"low,omitempty"`
	Volume               float64  `protobuf:"fixed64,9,opt,name=volume,proto3" json:"volume,omitempty"`
	Total                float64  `protobuf:"fixed64,10,opt,name=total,proto3" json:"total,omitempty"`
	TotalTrades          int32    `protobuf:"varint,11,opt,name=total_trades,json=totalTrades,proto3" json:"total_trades,omitempty"`
	BuyTotal             int32    `protobuf:"varint,12,opt,name=buy_total,json=buyTotal,proto3" json:"buy_total,omitempty"`
	SellTotal            int32    `protobuf:"varint,13,opt,name=sell_total,json=sellTotal,proto3" json:"sell_total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Candle) Reset()         { *m = Candle{} }
func (m *Candle) String() string { return proto.CompactTextString(m) }
func (*Candle) ProtoMessage()    {}
func (*Candle) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{23}
}
func (m *Candle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candle.Unmarshal(m, b)
}
func (m *Candle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candle.Marshal(b, m, deterministic)
}
func (dst *Candle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candle.Merge(dst, src)
}
func (m *Candle) XXX_Size() int {
	return xxx_messageInfo_Candle.Size(m)
}
func (m *Candle) XXX_DiscardUnknown() {
	xxx_messageInfo_Candle.DiscardUnknown(m)
}

var xxx_messageInfo_Candle proto.InternalMessageInfo

func (m *Candle) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *Candle) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_BTC_USD
}

func (m *Candle) GetGranularity() int32 {
	if m != nil {
		return m.Granularity
	}
	return 0
}

func (m *Candle) GetPoint() int32 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *Candle) GetOpen() float64 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *Candle) GetClose() float64 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *Candle) GetHigh() float64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *Candle) GetLow() float64 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *Candle) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Candle) GetTotal() float64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Candle) GetTotalTrades() int32 {
	if m != nil {
		return m.TotalTrades
	}
	return 0
}

func (m *Candle) GetBuyTotal() int32 {
	if m != nil {
		return m.BuyTotal
	}
	return 0
}

func (m *Candle) GetSellTotal() int32 {
	if m != nil {
		return m.SellTotal
	}
	return 0
}

// Events
type Event struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Event                string   `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	User                 string   `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Account              string   `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	Container            string   `protobuf:"bytes,5,opt,name=container,proto3" json:"container,omitempty"`
	Strategy             string   `protobuf:"bytes,6,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Timestamp            int64    `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Command              string   `protobuf:"bytes,8,opt,name=command,proto3" json:"command,omitempty"`
	Message              string   `protobuf:"bytes,9,opt,name=message,proto3" json:"message,omitempty"`
	Error                bool     `protobuf:"varint,10,opt,name=error,proto3" json:"error,omitempty"`
	Payload              string   `protobuf:"bytes,11,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{24}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *Event) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Event) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *Event) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

func (m *Event) GetStrategy() string {
	if m != nil {
		return m.Strategy
	}
	return ""
}

func (m *Event) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Event) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *Event) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Event) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func (m *Event) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func init() {
	proto.RegisterType((*Orders)(nil), "api.Orders")
	proto.RegisterType((*OrderRequest)(nil), "api.OrderRequest")
	proto.RegisterType((*OrderResult)(nil), "api.OrderResult")
	proto.RegisterType((*Position)(nil), "api.Position")
	proto.RegisterType((*PositionRequest)(nil), "api.PositionRequest")
	proto.RegisterType((*PositionsResult)(nil), "api.PositionsResult")
	proto.RegisterType((*AccountRequest)(nil), "api.AccountRequest")
	proto.RegisterType((*AccountResult)(nil), "api.AccountResult")
	proto.RegisterType((*ProductRequest)(nil), "api.ProductRequest")
	proto.RegisterType((*ProductResult)(nil), "api.ProductResult")
	proto.RegisterType((*VenueProduct)(nil), "api.VenueProduct")
	proto.RegisterType((*HistoricalTradesRequest)(nil), "api.HistoricalTradesRequest")
	proto.RegisterType((*HistoricalTradesResult)(nil), "api.HistoricalTradesResult")
	proto.RegisterType((*User)(nil), "api.User")
	proto.RegisterType((*Account)(nil), "api.Account")
	proto.RegisterMapType((map[string]*VenueBalance)(nil), "api.Account.BalancesEntry")
	proto.RegisterType((*VenueBalance)(nil), "api.VenueBalance")
	proto.RegisterMapType((map[string]*Balance)(nil), "api.VenueBalance.CurrencyEntry")
	proto.RegisterType((*Balance)(nil), "api.Balance")
	proto.RegisterType((*Item)(nil), "api.Item")
	proto.RegisterType((*Subscription)(nil), "api.Subscription")
	proto.RegisterType((*SubscriptionItems)(nil), "api.SubscriptionItems")
	proto.RegisterType((*Orderbook)(nil), "api.Orderbook")
	proto.RegisterType((*Trade)(nil), "api.Trade")
	proto.RegisterType((*Ticker)(nil), "api.Ticker")
	proto.RegisterType((*Candle)(nil), "api.Candle")
	proto.RegisterType((*Event)(nil), "api.Event")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// APIClient is the client API for API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIClient interface {
	// Get all Order for a user with filter - A server-to-client streaming RPC.
	// rpc GetOrders(OrderFilter) returns (stream Order) {}
	// Order request - A simple RPC
	OrderSend(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderResult, error)
	GetPositions(ctx context.Context, in *PositionRequest, opts ...grpc.CallOption) (*PositionsResult, error)
	GetAccount(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountResult, error)
	GetProductDetails(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductResult, error)
	GetHistoticalTrades(ctx context.Context, in *HistoricalTradesRequest, opts ...grpc.CallOption) (API_GetHistoticalTradesClient, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) OrderSend(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderResult, error) {
	out := new(OrderResult)
	err := c.cc.Invoke(ctx, "/api.API/OrderSend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetPositions(ctx context.Context, in *PositionRequest, opts ...grpc.CallOption) (*PositionsResult, error) {
	out := new(PositionsResult)
	err := c.cc.Invoke(ctx, "/api.API/GetPositions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetAccount(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountResult, error) {
	out := new(AccountResult)
	err := c.cc.Invoke(ctx, "/api.API/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetProductDetails(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductResult, error) {
	out := new(ProductResult)
	err := c.cc.Invoke(ctx, "/api.API/GetProductDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetHistoticalTrades(ctx context.Context, in *HistoricalTradesRequest, opts ...grpc.CallOption) (API_GetHistoticalTradesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[0], "/api.API/GetHistoticalTrades", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIGetHistoticalTradesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type API_GetHistoticalTradesClient interface {
	Recv() (*HistoricalTradesResult, error)
	grpc.ClientStream
}

type aPIGetHistoticalTradesClient struct {
	grpc.ClientStream
}

func (x *aPIGetHistoticalTradesClient) Recv() (*HistoricalTradesResult, error) {
	m := new(HistoricalTradesResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// APIServer is the server API for API service.
type APIServer interface {
	// Get all Order for a user with filter - A server-to-client streaming RPC.
	// rpc GetOrders(OrderFilter) returns (stream Order) {}
	// Order request - A simple RPC
	OrderSend(context.Context, *OrderRequest) (*OrderResult, error)
	GetPositions(context.Context, *PositionRequest) (*PositionsResult, error)
	GetAccount(context.Context, *AccountRequest) (*AccountResult, error)
	GetProductDetails(context.Context, *ProductRequest) (*ProductResult, error)
	GetHistoticalTrades(*HistoricalTradesRequest, API_GetHistoticalTradesServer) error
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_OrderSend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).OrderSend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.API/OrderSend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).OrderSend(ctx, req.(*OrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetPositions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetPositions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.API/GetPositions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetPositions(ctx, req.(*PositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.API/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetAccount(ctx, req.(*AccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetProductDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetProductDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.API/GetProductDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetProductDetails(ctx, req.(*ProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetHistoticalTrades_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HistoricalTradesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(APIServer).GetHistoticalTrades(m, &aPIGetHistoticalTradesServer{stream})
}

type API_GetHistoticalTradesServer interface {
	Send(*HistoricalTradesResult) error
	grpc.ServerStream
}

type aPIGetHistoticalTradesServer struct {
	grpc.ServerStream
}

func (x *aPIGetHistoticalTradesServer) Send(m *HistoricalTradesResult) error {
	return x.ServerStream.SendMsg(m)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OrderSend",
			Handler:    _API_OrderSend_Handler,
		},
		{
			MethodName: "GetPositions",
			Handler:    _API_GetPositions_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _API_GetAccount_Handler,
		},
		{
			MethodName: "GetProductDetails",
			Handler:    _API_GetProductDetails_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetHistoticalTrades",
			Handler:       _API_GetHistoticalTrades_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 2020 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x18, 0xcb, 0x8e, 0x24, 0x47,
	0xd1, 0xd5, 0xcf, 0xaa, 0xe8, 0xc7, 0x74, 0xe7, 0xce, 0xae, 0x8b, 0xf1, 0x18, 0x0f, 0x6d, 0x61,
	0x8f, 0x64, 0x18, 0xcc, 0xec, 0x0a, 0x2c, 0xdb, 0x42, 0xec, 0x2e, 0xeb, 0x65, 0x24, 0xc0, 0xab,
	0x9c, 0x81, 0x03, 0x1c, 0x5a, 0xd5, 0x55, 0xe9, 0x71, 0x6a, 0xaa, 0xab, 0x8a, 0xca, 0xec, 0xb6,
	0xdb, 0x48, 0x88, 0x1b, 0x07, 0xce, 0x88, 0xcf, 0x40, 0xf2, 0x95, 0x3b, 0xfc, 0x08, 0x12, 0x77,
	0x4e, 0x1c, 0x51, 0x44, 0x66, 0xbd, 0x7a, 0x66, 0x7b, 0x77, 0xa4, 0x15, 0xdc, 0x32, 0x9e, 0x15,
	0x11, 0x19, 0x11, 0x19, 0x51, 0xe0, 0x05, 0x99, 0x3c, 0xc9, 0xf2, 0x54, 0xa7, 0xac, 0x1d, 0x64,
	0xf2, 0x00, 0x44, 0xb2, 0x5a, 0x1a, 0xc4, 0xec, 0x1f, 0x3d, 0xe8, 0x7d, 0x9a, 0x47, 0x22, 0x57,
	0xec, 0x0d, 0xf0, 0x52, 0x3a, 0xcd, 0x65, 0xe4, 0x3b, 0x47, 0xce, 0x71, 0x87, 0xbb, 0x06, 0x71,
	0x16, 0xb1, 0x23, 0xe8, 0xae, 0x45, 0xb2, 0x12, 0x7e, 0xeb, 0xc8, 0x39, 0x1e, 0x9f, 0xc2, 0x09,
	0xea, 0xfc, 0x15, 0x62, 0xb8, 0x21, 0xb0, 0x37, 0x01, 0x82, 0x30, 0x4c, 0x57, 0x89, 0x46, 0xf9,
	0xf6, 0x91, 0x73, 0xec, 0x71, 0xcf, 0x62, 0xce, 0x22, 0xf6, 0x3d, 0x18, 0x58, 0xed, 0x7a, 0x93,
	0x09, 0xbf, 0x43, 0x6a, 0xc6, 0xa4, 0x86, 0xbe, 0x7f, 0xb1, 0xc9, 0x04, 0x07, 0xc3, 0x82, 0x67,
	0x76, 0x0a, 0x43, 0x2b, 0xa0, 0x74, 0xa0, 0x85, 0xdf, 0x25, 0x89, 0xbd, 0x4a, 0xe2, 0x1c, 0xd1,
	0xdc, 0x6a, 0x25, 0x80, 0xbd, 0x0b, 0x7b, 0x5a, 0x2e, 0xc5, 0x5c, 0x7c, 0x99, 0xc9, 0x3c, 0xd0,
	0x32, 0x4d, 0xfc, 0x1e, 0x39, 0x32, 0x46, 0xf4, 0x93, 0x12, 0x8b, 0xc6, 0x12, 0xa3, 0x12, 0x7a,
	0x95, 0xf9, 0x2e, 0xf1, 0x78, 0x88, 0x39, 0x47, 0x04, 0x7b, 0x02, 0x77, 0x6a, 0xc6, 0xce, 0x3f,
	0x93, 0x71, 0x2c, 0x93, 0x4b, 0xdf, 0x23, 0x13, 0xee, 0x36, 0x8d, 0xfe, 0xc4, 0x10, 0xf9, 0xb4,
	0xb2, 0xdd, 0xa2, 0xd8, 0xc7, 0x30, 0xa9, 0xab, 0x41, 0xfd, 0x3e, 0x90, 0x0e, 0xd6, 0xd4, 0x71,
	0x21, 0x97, 0x82, 0x8f, 0x2b, 0x05, 0x08, 0xb3, 0xf7, 0x61, 0x64, 0xa5, 0x73, 0x11, 0xa8, 0x34,
	0xf1, 0x07, 0x24, 0x3a, 0x20, 0x51, 0x4e, 0x28, 0x6e, 0x43, 0x64, 0x20, 0xf6, 0x7d, 0xb8, 0x6b,
	0x25, 0xb2, 0x54, 0x49, 0x74, 0x74, 0xbe, 0xd8, 0xe0, 0x6d, 0x0c, 0xc9, 0x41, 0x66, 0x88, 0xcf,
	0x2c, 0xed, 0xd1, 0xe6, 0x2c, 0x62, 0xdf, 0x01, 0xb6, 0x2d, 0x22, 0x23, 0x7f, 0x44, 0xfc, 0x93,
	0x26, 0xff, 0x59, 0xc4, 0xde, 0x81, 0x7e, 0x96, 0xa7, 0xd1, 0x2a, 0xd4, 0xfe, 0x98, 0x8c, 0x19,
	0x92, 0x31, 0xcf, 0x0c, 0x8e, 0x17, 0x44, 0xd4, 0x4a, 0x49, 0x31, 0x17, 0x5f, 0x8a, 0x70, 0x55,
	0x68, 0xdd, 0xa3, 0x9c, 0x98, 0x10, 0xe5, 0x49, 0x41, 0x38, 0x8b, 0xd8, 0x3d, 0xe8, 0xad, 0xd3,
	0x78, 0xb5, 0x14, 0xfe, 0xe4, 0xc8, 0x39, 0x76, 0xb8, 0x85, 0xd8, 0x3e, 0x74, 0xb3, 0x5c, 0x86,
	0xc2, 0x9f, 0x12, 0xda, 0x00, 0x6c, 0x02, 0xed, 0xcf, 0x84, 0xf0, 0x19, 0xe1, 0xf0, 0xc8, 0xc6,
	0xd0, 0xd2, 0x99, 0x7f, 0x87, 0x10, 0x2d, 0x9d, 0x21, 0xac, 0x62, 0x7f, 0xdf, 0xc0, 0x2a, 0x66,
	0xef, 0xc1, 0x54, 0xe7, 0x81, 0xb9, 0x93, 0x79, 0x26, 0xf2, 0x50, 0x24, 0xda, 0xbf, 0x4b, 0xe4,
	0x49, 0x49, 0x78, 0x66, 0xf0, 0x98, 0x19, 0x4a, 0xa7, 0xd9, 0x3c, 0x96, 0x4b, 0xa9, 0xfd, 0x7b,
	0xc4, 0xe5, 0x21, 0xe6, 0x67, 0x88, 0x60, 0x3e, 0xf4, 0xc3, 0x74, 0xb9, 0x44, 0x0d, 0xaf, 0x93,
	0x3b, 0x05, 0x38, 0xfb, 0x6b, 0x17, 0x86, 0x74, 0xa1, 0x5c, 0xfc, 0x76, 0x25, 0x94, 0x66, 0xc7,
	0xd0, 0x0b, 0x42, 0xca, 0x41, 0x87, 0x62, 0x35, 0xa1, 0x58, 0x5d, 0xe4, 0x41, 0x24, 0x1e, 0x12,
	0x9e, 0x5b, 0xfa, 0x4b, 0x14, 0x57, 0x2d, 0xf0, 0xed, 0x5d, 0x81, 0xdf, 0x87, 0x2e, 0x5d, 0x1a,
	0xd5, 0x57, 0x87, 0x1b, 0xa0, 0x16, 0xe0, 0xee, 0xcd, 0x01, 0xee, 0xd5, 0x03, 0x7c, 0x08, 0xe4,
	0xaf, 0x09, 0x40, 0xbf, 0x0a, 0x00, 0x21, 0x6c, 0x70, 0xdd, 0x32, 0xb8, 0x26, 0xf8, 0x5e, 0x19,
	0xfc, 0x1b, 0x83, 0x0d, 0xcf, 0x09, 0xf6, 0x21, 0x78, 0x91, 0x58, 0x4b, 0x53, 0xa9, 0x03, 0x53,
	0x85, 0x25, 0x82, 0x7d, 0x17, 0x4c, 0x3f, 0x30, 0x1d, 0x63, 0x78, 0x63, 0xc7, 0x30, 0x2d, 0x8b,
	0x1a, 0xc6, 0x71, 0xc1, 0xae, 0x64, 0x24, 0x28, 0x85, 0xc7, 0xa7, 0x1e, 0xb1, 0x9f, 0xcb, 0xa8,
	0xe0, 0xc4, 0x23, 0x7b, 0x6c, 0x93, 0xbe, 0x59, 0xdd, 0xe3, 0x5d, 0xd5, 0x3d, 0x49, 0xb7, 0x30,
	0xec, 0x43, 0xd8, 0xab, 0x29, 0xa1, 0xda, 0xde, 0x7b, 0x6e, 0x6d, 0x8f, 0xd2, 0x3a, 0xc8, 0x4e,
	0x6c, 0x6f, 0x2b, 0x2a, 0x7b, 0x72, 0xbd, 0xb2, 0x4d, 0x5f, 0xb3, 0x85, 0xfd, 0x4d, 0x80, 0x5a,
	0x4b, 0x9b, 0x52, 0xa0, 0x6a, 0x98, 0x7a, 0x56, 0xb2, 0x46, 0x56, 0xb2, 0x03, 0x70, 0x8b, 0xc2,
	0xa6, 0x0a, 0xe9, 0xf0, 0x12, 0x9e, 0xfd, 0xb1, 0x05, 0x03, 0x9b, 0xb1, 0x6a, 0x15, 0x6b, 0x4c,
	0xb2, 0x5c, 0xe8, 0x30, 0x8d, 0x84, 0xcd, 0xd8, 0xa1, 0x35, 0x88, 0x70, 0xbc, 0x20, 0x56, 0x69,
	0xd3, 0xaa, 0xa7, 0x4d, 0x95, 0x64, 0xed, 0x46, 0x92, 0xd9, 0x7a, 0xed, 0x54, 0xf5, 0xfa, 0x6d,
	0xe8, 0xee, 0x6c, 0xe9, 0x86, 0xca, 0xde, 0x82, 0x41, 0xbd, 0x27, 0xf5, 0xc8, 0x31, 0xc8, 0xaa,
	0x6e, 0x74, 0x02, 0x77, 0x16, 0x79, 0x7a, 0x25, 0xf2, 0x66, 0x9b, 0xe9, 0x13, 0xe3, 0xd4, 0x90,
	0xea, 0x7d, 0xa6, 0x16, 0x25, 0xb7, 0x59, 0xbb, 0x7f, 0x6b, 0x83, 0x5b, 0xb4, 0xb9, 0xed, 0xef,
	0x9a, 0x97, 0xb0, 0xfe, 0xdd, 0x17, 0x97, 0xab, 0x0f, 0x7d, 0xfb, 0xf2, 0xd9, 0x87, 0xb0, 0x00,
	0xd9, 0xdb, 0x30, 0x2a, 0x95, 0x53, 0xce, 0x98, 0x42, 0x1d, 0x16, 0x48, 0x9b, 0x1e, 0x15, 0x13,
	0x25, 0x73, 0x77, 0x3b, 0x99, 0x4b, 0x7e, 0xca, 0xe7, 0x07, 0xb0, 0x57, 0xf2, 0xdb, 0x8c, 0xea,
	0x5d, 0xcf, 0xa8, 0x71, 0xc1, 0x63, 0x93, 0xaa, 0xba, 0xb0, 0xfe, 0xcd, 0x5d, 0xc1, 0xad, 0x5f,
	0xef, 0x76, 0x9d, 0x9b, 0x3e, 0x00, 0x65, 0x1f, 0x60, 0xd0, 0x51, 0x5f, 0x04, 0x19, 0x55, 0xb1,
	0xc3, 0xe9, 0x5c, 0xef, 0x5a, 0xc3, 0x5d, 0x5d, 0xab, 0x76, 0x31, 0xa3, 0x66, 0xfa, 0xbe, 0x5d,
	0x4c, 0x27, 0xfe, 0xf8, 0xa8, 0x7d, 0x3c, 0xb0, 0x0e, 0x19, 0x14, 0xb7, 0xa4, 0xd9, 0x6f, 0x60,
	0xef, 0x59, 0xe9, 0x9a, 0xe9, 0xbd, 0xe5, 0x15, 0x39, 0x2f, 0xd1, 0x51, 0x5b, 0x3b, 0x6c, 0x9b,
	0xfd, 0xc1, 0xa9, 0xb4, 0xab, 0x5b, 0x16, 0xca, 0x7b, 0xe0, 0x15, 0x31, 0x57, 0x7e, 0x8b, 0x1c,
	0x18, 0x99, 0xaf, 0x14, 0xe6, 0x56, 0xf4, 0x7a, 0x10, 0xda, 0xcd, 0xec, 0x3c, 0x85, 0xf1, 0x43,
	0x93, 0x3e, 0x2f, 0xed, 0xde, 0x6c, 0x03, 0xa3, 0x52, 0xe6, 0x56, 0x36, 0xbf, 0x53, 0xa5, 0x2e,
	0xc6, 0x65, 0x60, 0xf9, 0x0a, 0x65, 0x65, 0x22, 0x3f, 0xdf, 0xdc, 0x5f, 0xc3, 0xb8, 0x88, 0xe2,
	0x2b, 0xbf, 0x8d, 0x3f, 0x39, 0x30, 0x2a, 0x95, 0xdf, 0xca, 0xaf, 0x0f, 0x60, 0x6c, 0x46, 0x12,
	0xab, 0x4a, 0x59, 0xf7, 0xa6, 0x95, 0x31, 0x85, 0xe2, 0xd1, 0xba, 0x06, 0xed, 0xba, 0x98, 0x7f,
	0x3a, 0x30, 0xac, 0x4b, 0x22, 0xab, 0x48, 0x82, 0x45, 0x2c, 0x4c, 0xdb, 0x70, 0x79, 0x01, 0xb2,
	0xfb, 0x70, 0x57, 0x26, 0x91, 0x5c, 0xcb, 0x68, 0x15, 0xc4, 0xf3, 0x30, 0x4d, 0x12, 0x61, 0x66,
	0x83, 0x16, 0xf1, 0xed, 0x57, 0xc4, 0xc7, 0x25, 0x0d, 0x1b, 0xdc, 0x52, 0x26, 0x72, 0xb9, 0x5a,
	0xce, 0x8b, 0x51, 0x58, 0x7e, 0x55, 0xf4, 0xd7, 0xa9, 0x25, 0x99, 0x22, 0x38, 0x97, 0x5f, 0x09,
	0x9c, 0xe0, 0x95, 0x16, 0x99, 0xe1, 0x32, 0x0d, 0xd7, 0x45, 0x44, 0x41, 0x5c, 0x06, 0xd8, 0x2c,
	0xb1, 0x1b, 0x9b, 0x39, 0xc0, 0x25, 0xc4, 0x27, 0x82, 0x88, 0xba, 0x24, 0x9a, 0x69, 0xc0, 0xd5,
	0x96, 0x88, 0x41, 0x7f, 0xfd, 0xa7, 0x52, 0xe9, 0x34, 0x97, 0x61, 0x10, 0xd3, 0x00, 0xa3, 0x5e,
	0xf9, 0xd5, 0x62, 0xdb, 0x59, 0x88, 0x4b, 0x99, 0x90, 0x7b, 0x1d, 0x6e, 0x00, 0x7c, 0x3d, 0x44,
	0x12, 0xd9, 0x2e, 0x89, 0xc7, 0xd9, 0xef, 0xe1, 0xde, 0x75, 0x63, 0x6e, 0x95, 0x0a, 0x33, 0xe8,
	0x69, 0x92, 0xb3, 0x29, 0x00, 0xd5, 0x60, 0xc6, 0x2d, 0x65, 0xc7, 0xa5, 0xff, 0x18, 0x3a, 0xbf,
	0x54, 0x22, 0xc7, 0x06, 0x68, 0x5f, 0x07, 0x8f, 0xb7, 0x64, 0xc4, 0x8e, 0xc1, 0xb5, 0xb5, 0x51,
	0xd4, 0x7a, 0xb3, 0x72, 0x4a, 0xea, 0xec, 0xeb, 0x16, 0xf4, 0x2d, 0x76, 0x6b, 0x6b, 0x72, 0xb6,
	0xb7, 0xa6, 0xfb, 0x30, 0x2c, 0xc8, 0x34, 0x04, 0xb5, 0x6a, 0x93, 0xa4, 0x55, 0x41, 0x63, 0xd0,
	0x20, 0xa8, 0x80, 0xba, 0xd0, 0x12, 0x83, 0xd1, 0xbe, 0x2e, 0xf4, 0x73, 0x0c, 0x48, 0x21, 0x84,
	0x00, 0xfb, 0x01, 0xb8, 0x8b, 0x20, 0x0e, 0x92, 0x50, 0x28, 0xbf, 0x43, 0xe6, 0x1f, 0xd4, 0x05,
	0x4e, 0x1e, 0x59, 0xe2, 0x93, 0x44, 0xe7, 0x1b, 0x5e, 0xf2, 0xe2, 0x2b, 0x82, 0x53, 0xec, 0xda,
	0xe4, 0x94, 0xcb, 0x2d, 0x74, 0xf0, 0x0b, 0x18, 0x35, 0x44, 0xf0, 0x26, 0xaf, 0xc4, 0xc6, 0xba,
	0x88, 0x47, 0xf6, 0x2e, 0x74, 0xd7, 0x41, 0x6c, 0xdf, 0xd1, 0x46, 0x25, 0x5a, 0x49, 0x6e, 0xe8,
	0x1f, 0xb6, 0x3e, 0x70, 0x66, 0x5f, 0x17, 0xb5, 0x66, 0x69, 0xec, 0xa0, 0x8c, 0x7f, 0x33, 0xed,
	0xf0, 0x2e, 0x3e, 0x02, 0x37, 0x5c, 0xe5, 0xb9, 0x48, 0xc2, 0x8d, 0xbd, 0x8b, 0xb7, 0xae, 0x29,
	0x3f, 0x79, 0x6c, 0x39, 0xac, 0x47, 0x85, 0xc0, 0xc1, 0x19, 0x8c, 0x1a, 0xa4, 0x1b, 0x2c, 0x9f,
	0x35, 0x2d, 0x37, 0x17, 0x7d, 0x83, 0xd1, 0x1f, 0x41, 0xbf, 0x30, 0xf7, 0x10, 0xbc, 0x60, 0x1d,
	0xc8, 0x18, 0xdb, 0x01, 0xa9, 0x72, 0x78, 0x85, 0xc0, 0xd7, 0xf3, 0xf3, 0x34, 0x8e, 0xec, 0x44,
	0x45, 0xe7, 0xd9, 0x03, 0xe8, 0x9c, 0x69, 0xb1, 0xa4, 0x08, 0x2f, 0xa9, 0x21, 0x1b, 0x31, 0x0b,
	0xdd, 0x3c, 0x86, 0xe1, 0x7b, 0x35, 0x3c, 0x5f, 0x2d, 0x54, 0x98, 0xcb, 0x8c, 0x9a, 0xc8, 0x03,
	0xf0, 0x94, 0x81, 0x17, 0xf8, 0x61, 0x0c, 0xc6, 0x3d, 0x33, 0x48, 0xd4, 0xb8, 0xf0, 0x43, 0x8a,
	0x57, 0x8c, 0x38, 0xdd, 0x86, 0x41, 0x12, 0xc5, 0x62, 0x7e, 0x99, 0xa7, 0xab, 0x6c, 0xbe, 0xd8,
	0xd8, 0xdc, 0x33, 0xd3, 0xed, 0x63, 0xa2, 0x3d, 0x45, 0xd2, 0xa3, 0x0d, 0x1f, 0x85, 0x75, 0x70,
	0xf6, 0x3b, 0x98, 0x5e, 0xd3, 0xfd, 0x0a, 0x1b, 0xc5, 0xa1, 0xfd, 0x4f, 0xb1, 0x48, 0xd3, 0x2b,
	0xca, 0x6d, 0x97, 0x57, 0x88, 0xd9, 0x7f, 0x1c, 0xf0, 0x3e, 0x2d, 0xa0, 0xba, 0x4e, 0x67, 0x97,
	0xce, 0x17, 0x8f, 0x74, 0x87, 0x40, 0xff, 0x07, 0x94, 0x0e, 0x96, 0x99, 0x6d, 0x51, 0x15, 0x02,
	0xef, 0x28, 0x16, 0x6b, 0x11, 0x2b, 0xea, 0x54, 0x23, 0x6e, 0x21, 0xf6, 0x26, 0x74, 0x02, 0x75,
	0xa5, 0xfc, 0x2e, 0xc5, 0xdd, 0x0c, 0x70, 0x18, 0x0f, 0x4e, 0x68, 0x24, 0x2f, 0x64, 0xa4, 0xfc,
	0xde, 0x35, 0x32, 0xa2, 0x71, 0x01, 0x32, 0x6f, 0x16, 0xd5, 0x7e, 0xbf, 0xb6, 0x00, 0x91, 0x69,
	0x66, 0x01, 0x5a, 0x17, 0xc7, 0xd9, 0xbf, 0x1d, 0xe8, 0x52, 0x17, 0xfb, 0x9f, 0xb9, 0x5d, 0xa6,
	0x60, 0xa7, 0x3e, 0x2a, 0xe2, 0x28, 0x88, 0x2f, 0x50, 0xd7, 0x8e, 0x82, 0xf8, 0xfa, 0x34, 0x97,
	0xb3, 0xde, 0x8e, 0xe5, 0xec, 0x96, 0x4e, 0xff, 0xb9, 0x05, 0xbd, 0x0b, 0x19, 0x5e, 0x89, 0xfc,
	0xff, 0xec, 0x75, 0xd3, 0xc3, 0xee, 0x0e, 0x0f, 0xbf, 0x01, 0xee, 0x42, 0x28, 0x3d, 0x5f, 0xd8,
	0xad, 0xc6, 0xe1, 0x7d, 0x84, 0x1f, 0xc9, 0xa8, 0x24, 0x05, 0xea, 0xca, 0x4e, 0xe5, 0x44, 0x7a,
	0xa8, 0xae, 0xb6, 0xe2, 0xe2, 0xbe, 0x28, 0x2e, 0xff, 0x6a, 0x41, 0xcf, 0x54, 0xe9, 0x2b, 0x2c,
	0xbd, 0x23, 0x18, 0x5c, 0xe6, 0x41, 0xb2, 0x8a, 0x83, 0x5c, 0xea, 0x0d, 0x45, 0xa6, 0xcb, 0xeb,
	0x28, 0x8a, 0x4d, 0x2a, 0x13, 0x4d, 0xb1, 0xe9, 0x72, 0x03, 0x60, 0x46, 0xa4, 0x99, 0x48, 0x8a,
	0x8c, 0xc0, 0x33, 0x72, 0x86, 0x71, 0xaa, 0xca, 0x9f, 0x0f, 0x04, 0x50, 0x23, 0x94, 0x97, 0x9f,
	0x5b, 0xe7, 0xe9, 0x8c, 0xfd, 0x37, 0x4e, 0xbf, 0xb0, 0xeb, 0x08, 0x1e, 0x6b, 0xab, 0x8b, 0xb7,
	0xbd, 0xba, 0xe8, 0x54, 0x07, 0xc5, 0x5e, 0x62, 0x00, 0xf6, 0x2d, 0x18, 0xd2, 0x61, 0x6e, 0x5f,
	0xfd, 0x81, 0x31, 0x9b, 0x70, 0x66, 0x80, 0xc0, 0xf9, 0x67, 0xb1, 0xda, 0xcc, 0x8d, 0xf0, 0x90,
	0xe8, 0xee, 0x62, 0xb5, 0xb9, 0x20, 0xf9, 0x37, 0x01, 0x94, 0x88, 0x63, 0x4b, 0x1d, 0x11, 0xd5,
	0x43, 0x0c, 0x91, 0x67, 0x7f, 0x69, 0x41, 0xf7, 0xc9, 0x1a, 0xb7, 0x95, 0xed, 0x91, 0x60, 0x1f,
	0xba, 0x02, 0x09, 0x14, 0x54, 0x8f, 0x1b, 0x00, 0x5d, 0x5c, 0x29, 0x91, 0xdb, 0xb9, 0x82, 0xce,
	0xf5, 0x85, 0xb1, 0xd3, 0x5c, 0x18, 0x0f, 0xc1, 0x0b, 0xd3, 0x44, 0x07, 0x32, 0x11, 0x39, 0xc5,
	0xcf, 0xe3, 0x15, 0x02, 0xd7, 0x7b, 0xa5, 0xf3, 0x40, 0x8b, 0xcb, 0x8d, 0x5d, 0x90, 0x4b, 0xb8,
	0x99, 0xc4, 0x18, 0xcf, 0x76, 0x3d, 0x89, 0xed, 0x80, 0x13, 0x24, 0x51, 0x7d, 0x19, 0x0e, 0x12,
	0x5a, 0x93, 0x97, 0x42, 0xa9, 0xe0, 0xd2, 0x44, 0xd7, 0xe3, 0x05, 0x48, 0xfe, 0xe4, 0x79, 0x9a,
	0x53, 0x78, 0x5d, 0x6e, 0x00, 0xe4, 0xcf, 0x82, 0x4d, 0x9c, 0x06, 0x11, 0x45, 0xd6, 0xe3, 0x05,
	0x78, 0xfa, 0xf7, 0x16, 0xb4, 0x1f, 0x3e, 0x3b, 0x63, 0xa7, 0xb6, 0x25, 0x9f, 0x8b, 0x24, 0x62,
	0xd3, 0x6a, 0x85, 0xb3, 0x43, 0xe4, 0xc1, 0xa4, 0x8e, 0xc2, 0x51, 0x6e, 0xf6, 0x1a, 0xfb, 0x18,
	0x86, 0x4f, 0x85, 0x2e, 0x37, 0x2f, 0xb6, 0xdf, 0x5c, 0x9c, 0xac, 0x64, 0x13, 0xab, 0x4a, 0xe9,
	0x1f, 0x02, 0x3c, 0x15, 0xba, 0x18, 0xb2, 0xee, 0x34, 0x06, 0x31, 0x2b, 0xca, 0x9a, 0x48, 0x2b,
	0xf8, 0x23, 0x98, 0xe2, 0x67, 0x4d, 0xbe, 0xff, 0x44, 0xe8, 0x40, 0xc6, 0xca, 0xca, 0x37, 0x97,
	0x1a, 0x2b, 0xdf, 0x58, 0x46, 0x66, 0xaf, 0xb1, 0x0b, 0xb8, 0xf3, 0x54, 0x68, 0x1a, 0x50, 0x75,
	0x35, 0xa0, 0xb2, 0x43, 0x62, 0x7e, 0xce, 0x10, 0x7d, 0xf0, 0xc6, 0x73, 0xa8, 0x46, 0xe7, 0xfb,
	0xce, 0xa2, 0x47, 0x3f, 0xeb, 0xef, 0xff, 0x37, 0x00, 0x00, 0xff, 0xff, 0x51, 0xa3, 0x44, 0xf3,
	0xca, 0x17, 0x00, 0x00,
}
