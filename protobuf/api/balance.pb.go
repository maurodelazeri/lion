// Code generated by protoc-gen-go. DO NOT EDIT.
// source: balance.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Balance struct {
	Venue                Venue    `protobuf:"varint,1,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	Currency             Currency `protobuf:"varint,2,opt,name=currency,proto3,enum=api.Currency" json:"currency,omitempty"`
	Available            float64  `protobuf:"fixed64,3,opt,name=available,proto3" json:"available,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Position             string   `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty"`
	Order                string   `protobuf:"bytes,6,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Balance) Reset()         { *m = Balance{} }
func (m *Balance) String() string { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()    {}
func (*Balance) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee25a00b628521b1, []int{0}
}

func (m *Balance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Balance.Unmarshal(m, b)
}
func (m *Balance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Balance.Marshal(b, m, deterministic)
}
func (m *Balance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Balance.Merge(m, src)
}
func (m *Balance) XXX_Size() int {
	return xxx_messageInfo_Balance.Size(m)
}
func (m *Balance) XXX_DiscardUnknown() {
	xxx_messageInfo_Balance.DiscardUnknown(m)
}

var xxx_messageInfo_Balance proto.InternalMessageInfo

func (m *Balance) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *Balance) GetCurrency() Currency {
	if m != nil {
		return m.Currency
	}
	return Currency_BTC
}

func (m *Balance) GetAvailable() float64 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *Balance) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Balance) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Balance) GetOrder() string {
	if m != nil {
		return m.Order
	}
	return ""
}

func init() {
	proto.RegisterType((*Balance)(nil), "api.Balance")
}

func init() { proto.RegisterFile("balance.proto", fileDescriptor_ee25a00b628521b1) }

var fileDescriptor_ee25a00b628521b1 = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0xbd, 0x6e, 0x83, 0x30,
	0x14, 0x46, 0xe5, 0x52, 0x28, 0x5c, 0x89, 0x0e, 0x56, 0x07, 0x0b, 0x75, 0xb0, 0x3a, 0xb9, 0x0b,
	0x43, 0xfb, 0x06, 0xc9, 0x1b, 0x58, 0x51, 0xf6, 0x0b, 0xb9, 0x83, 0x25, 0xb0, 0x2d, 0xf3, 0x23,
	0xe5, 0xfd, 0xf2, 0x60, 0x11, 0x76, 0x04, 0xe3, 0x77, 0xce, 0x59, 0x3e, 0xa8, 0x3b, 0x1c, 0xd0,
	0xf6, 0xd4, 0xfa, 0xe0, 0x66, 0xc7, 0x33, 0xf4, 0xa6, 0x01, 0xb2, 0xcb, 0x98, 0xc0, 0xcf, 0x83,
	0xc1, 0xc7, 0x29, 0x25, 0x5c, 0x42, 0xbe, 0x92, 0x5d, 0x48, 0x30, 0xc9, 0xd4, 0xe7, 0x1f, 0xb4,
	0xe8, 0x4d, 0x7b, 0xdd, 0x88, 0x4e, 0x82, 0xff, 0x42, 0xd9, 0x2f, 0x21, 0x90, 0xed, 0xef, 0xe2,
	0x2d, 0x46, 0x75, 0x8c, 0xce, 0x2f, 0xa8, 0x77, 0xcd, 0xbf, 0xa1, 0xc2, 0x15, 0xcd, 0x80, 0xdd,
	0x40, 0x22, 0x93, 0x4c, 0x31, 0x7d, 0x80, 0xcd, 0x5e, 0xcc, 0x48, 0xd3, 0x8c, 0xa3, 0x17, 0xef,
	0x92, 0xa9, 0x4c, 0x1f, 0x80, 0x37, 0x50, 0x7a, 0x37, 0x99, 0xd9, 0x38, 0x2b, 0x72, 0xc9, 0x54,
	0xa5, 0xf7, 0xcd, 0xbf, 0x20, 0x77, 0xe1, 0x46, 0x41, 0x14, 0x51, 0xa4, 0xd1, 0x15, 0xf1, 0xcd,
	0xff, 0x33, 0x00, 0x00, 0xff, 0xff, 0x14, 0xa9, 0xe3, 0x9e, 0xef, 0x00, 0x00, 0x00,
}
