// Code generated by protoc-gen-go. DO NOT EDIT.
// source: execution.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Orders struct {
	Venue                Venue            `protobuf:"varint,1,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	Type                 OrderType        `protobuf:"varint,2,opt,name=type,proto3,enum=api.OrderType" json:"type,omitempty"`
	Side                 Side             `protobuf:"varint,3,opt,name=side,proto3,enum=api.Side" json:"side,omitempty"`
	State                OrderState       `protobuf:"varint,4,opt,name=state,proto3,enum=api.OrderState" json:"state,omitempty"`
	TimeExpiration       int64            `protobuf:"varint,5,opt,name=time_expiration,json=timeExpiration,proto3" json:"time_expiration,omitempty"`
	TimeSetup            int64            `protobuf:"varint,6,opt,name=time_setup,json=timeSetup,proto3" json:"time_setup,omitempty"`
	TypeFilling          OrderTypeFilling `protobuf:"varint,7,opt,name=type_filling,json=typeFilling,proto3,enum=api.OrderTypeFilling" json:"type_filling,omitempty"`
	TypeTime             OrderTypeTime    `protobuf:"varint,8,opt,name=type_time,json=typeTime,proto3,enum=api.OrderTypeTime" json:"type_time,omitempty"`
	Reason               Reason           `protobuf:"varint,9,opt,name=reason,proto3,enum=api.Reason" json:"reason,omitempty"`
	Product              string           `protobuf:"bytes,10,opt,name=product,proto3" json:"product,omitempty"`
	VenueExecutionId     string           `protobuf:"bytes,11,opt,name=venue_execution_id,json=venueExecutionId,proto3" json:"venue_execution_id,omitempty"`
	Volume               float64          `protobuf:"fixed64,12,opt,name=volume,proto3" json:"volume,omitempty"`
	Price                float64          `protobuf:"fixed64,13,opt,name=price,proto3" json:"price,omitempty"`
	Fee                  float64          `protobuf:"fixed64,14,opt,name=fee,proto3" json:"fee,omitempty"`
	LeftVolume           float64          `protobuf:"fixed64,15,opt,name=left_volume,json=leftVolume,proto3" json:"left_volume,omitempty"`
	EntryType            OrderEntryType   `protobuf:"varint,16,opt,name=entry_type,json=entryType,proto3,enum=api.OrderEntryType" json:"entry_type,omitempty"`
	Comment              string           `protobuf:"bytes,17,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Orders) Reset()         { *m = Orders{} }
func (m *Orders) String() string { return proto.CompactTextString(m) }
func (*Orders) ProtoMessage()    {}
func (*Orders) Descriptor() ([]byte, []int) {
	return fileDescriptor_776e2c5022e94aef, []int{0}
}

func (m *Orders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Orders.Unmarshal(m, b)
}
func (m *Orders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Orders.Marshal(b, m, deterministic)
}
func (m *Orders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Orders.Merge(m, src)
}
func (m *Orders) XXX_Size() int {
	return xxx_messageInfo_Orders.Size(m)
}
func (m *Orders) XXX_DiscardUnknown() {
	xxx_messageInfo_Orders.DiscardUnknown(m)
}

var xxx_messageInfo_Orders proto.InternalMessageInfo

func (m *Orders) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *Orders) GetType() OrderType {
	if m != nil {
		return m.Type
	}
	return OrderType_MARKET
}

func (m *Orders) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side_BUY
}

func (m *Orders) GetState() OrderState {
	if m != nil {
		return m.State
	}
	return OrderState_STARTED
}

func (m *Orders) GetTimeExpiration() int64 {
	if m != nil {
		return m.TimeExpiration
	}
	return 0
}

func (m *Orders) GetTimeSetup() int64 {
	if m != nil {
		return m.TimeSetup
	}
	return 0
}

func (m *Orders) GetTypeFilling() OrderTypeFilling {
	if m != nil {
		return m.TypeFilling
	}
	return OrderTypeFilling_FOK
}

func (m *Orders) GetTypeTime() OrderTypeTime {
	if m != nil {
		return m.TypeTime
	}
	return OrderTypeTime_GTC
}

func (m *Orders) GetReason() Reason {
	if m != nil {
		return m.Reason
	}
	return Reason_ORDER_CLIENT
}

func (m *Orders) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *Orders) GetVenueExecutionId() string {
	if m != nil {
		return m.VenueExecutionId
	}
	return ""
}

func (m *Orders) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Orders) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Orders) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *Orders) GetLeftVolume() float64 {
	if m != nil {
		return m.LeftVolume
	}
	return 0
}

func (m *Orders) GetEntryType() OrderEntryType {
	if m != nil {
		return m.EntryType
	}
	return OrderEntryType_IN
}

func (m *Orders) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type OrderRequest struct {
	Action               TradeAction      `protobuf:"varint,1,opt,name=action,proto3,enum=api.TradeAction" json:"action,omitempty"`
	Venue                Venue            `protobuf:"varint,2,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	Product              string           `protobuf:"bytes,3,opt,name=product,proto3" json:"product,omitempty"`
	Volume               float64          `protobuf:"fixed64,4,opt,name=volume,proto3" json:"volume,omitempty"`
	Price                float64          `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	Stoplimit            float64          `protobuf:"fixed64,6,opt,name=stoplimit,proto3" json:"stoplimit,omitempty"`
	Sl                   float64          `protobuf:"fixed64,7,opt,name=sl,proto3" json:"sl,omitempty"`
	Tp                   float64          `protobuf:"fixed64,8,opt,name=tp,proto3" json:"tp,omitempty"`
	TraillingPercent     float64          `protobuf:"fixed64,9,opt,name=trailling_percent,json=traillingPercent,proto3" json:"trailling_percent,omitempty"`
	Deviation            float64          `protobuf:"fixed64,10,opt,name=deviation,proto3" json:"deviation,omitempty"`
	OrderType            OrderType        `protobuf:"varint,11,opt,name=order_type,json=orderType,proto3,enum=api.OrderType" json:"order_type,omitempty"`
	OrderSide            Side             `protobuf:"varint,12,opt,name=order_side,json=orderSide,proto3,enum=api.Side" json:"order_side,omitempty"`
	OrderTypeFilling     OrderTypeFilling `protobuf:"varint,13,opt,name=order_type_filling,json=orderTypeFilling,proto3,enum=api.OrderTypeFilling" json:"order_type_filling,omitempty"`
	OrderTypeTime        OrderTypeTime    `protobuf:"varint,14,opt,name=order_type_time,json=orderTypeTime,proto3,enum=api.OrderTypeTime" json:"order_type_time,omitempty"`
	OrderReason          Reason           `protobuf:"varint,15,opt,name=order_reason,json=orderReason,proto3,enum=api.Reason" json:"order_reason,omitempty"`
	Expiration           int64            `protobuf:"varint,16,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Comment              string           `protobuf:"bytes,17,opt,name=comment,proto3" json:"comment,omitempty"`
	Position             string           `protobuf:"bytes,18,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OrderRequest) Reset()         { *m = OrderRequest{} }
func (m *OrderRequest) String() string { return proto.CompactTextString(m) }
func (*OrderRequest) ProtoMessage()    {}
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_776e2c5022e94aef, []int{1}
}

func (m *OrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderRequest.Unmarshal(m, b)
}
func (m *OrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderRequest.Marshal(b, m, deterministic)
}
func (m *OrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderRequest.Merge(m, src)
}
func (m *OrderRequest) XXX_Size() int {
	return xxx_messageInfo_OrderRequest.Size(m)
}
func (m *OrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderRequest proto.InternalMessageInfo

func (m *OrderRequest) GetAction() TradeAction {
	if m != nil {
		return m.Action
	}
	return TradeAction_DEAL
}

func (m *OrderRequest) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *OrderRequest) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *OrderRequest) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *OrderRequest) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OrderRequest) GetStoplimit() float64 {
	if m != nil {
		return m.Stoplimit
	}
	return 0
}

func (m *OrderRequest) GetSl() float64 {
	if m != nil {
		return m.Sl
	}
	return 0
}

func (m *OrderRequest) GetTp() float64 {
	if m != nil {
		return m.Tp
	}
	return 0
}

func (m *OrderRequest) GetTraillingPercent() float64 {
	if m != nil {
		return m.TraillingPercent
	}
	return 0
}

func (m *OrderRequest) GetDeviation() float64 {
	if m != nil {
		return m.Deviation
	}
	return 0
}

func (m *OrderRequest) GetOrderType() OrderType {
	if m != nil {
		return m.OrderType
	}
	return OrderType_MARKET
}

func (m *OrderRequest) GetOrderSide() Side {
	if m != nil {
		return m.OrderSide
	}
	return Side_BUY
}

func (m *OrderRequest) GetOrderTypeFilling() OrderTypeFilling {
	if m != nil {
		return m.OrderTypeFilling
	}
	return OrderTypeFilling_FOK
}

func (m *OrderRequest) GetOrderTypeTime() OrderTypeTime {
	if m != nil {
		return m.OrderTypeTime
	}
	return OrderTypeTime_GTC
}

func (m *OrderRequest) GetOrderReason() Reason {
	if m != nil {
		return m.OrderReason
	}
	return Reason_ORDER_CLIENT
}

func (m *OrderRequest) GetExpiration() int64 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

func (m *OrderRequest) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *OrderRequest) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

type OrderResult struct {
	Retcode              Retcode    `protobuf:"varint,1,opt,name=retcode,proto3,enum=api.Retcode" json:"retcode,omitempty"`
	Price                float64    `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	Volume               float64    `protobuf:"fixed64,3,opt,name=volume,proto3" json:"volume,omitempty"`
	Fee                  float64    `protobuf:"fixed64,4,opt,name=fee,proto3" json:"fee,omitempty"`
	State                OrderState `protobuf:"varint,5,opt,name=state,proto3,enum=api.OrderState" json:"state,omitempty"`
	PositionId           string     `protobuf:"bytes,6,opt,name=position_id,json=positionId,proto3" json:"position_id,omitempty"`
	BrokerExecutionId    string     `protobuf:"bytes,7,opt,name=broker_execution_id,json=brokerExecutionId,proto3" json:"broker_execution_id,omitempty"`
	Comment              string     `protobuf:"bytes,8,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *OrderResult) Reset()         { *m = OrderResult{} }
func (m *OrderResult) String() string { return proto.CompactTextString(m) }
func (*OrderResult) ProtoMessage()    {}
func (*OrderResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_776e2c5022e94aef, []int{2}
}

func (m *OrderResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderResult.Unmarshal(m, b)
}
func (m *OrderResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderResult.Marshal(b, m, deterministic)
}
func (m *OrderResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderResult.Merge(m, src)
}
func (m *OrderResult) XXX_Size() int {
	return xxx_messageInfo_OrderResult.Size(m)
}
func (m *OrderResult) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderResult.DiscardUnknown(m)
}

var xxx_messageInfo_OrderResult proto.InternalMessageInfo

func (m *OrderResult) GetRetcode() Retcode {
	if m != nil {
		return m.Retcode
	}
	return Retcode_REJECTX
}

func (m *OrderResult) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OrderResult) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *OrderResult) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *OrderResult) GetState() OrderState {
	if m != nil {
		return m.State
	}
	return OrderState_STARTED
}

func (m *OrderResult) GetPositionId() string {
	if m != nil {
		return m.PositionId
	}
	return ""
}

func (m *OrderResult) GetBrokerExecutionId() string {
	if m != nil {
		return m.BrokerExecutionId
	}
	return ""
}

func (m *OrderResult) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type Position struct {
	PositionId           string    `protobuf:"bytes,1,opt,name=position_id,json=positionId,proto3" json:"position_id,omitempty"`
	AccountId            string    `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Venue                Venue     `protobuf:"varint,3,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	Product              string    `protobuf:"bytes,4,opt,name=product,proto3" json:"product,omitempty"`
	PriceOpen            float64   `protobuf:"fixed64,5,opt,name=price_open,json=priceOpen,proto3" json:"price_open,omitempty"`
	WeightedPrice        float64   `protobuf:"fixed64,6,opt,name=weighted_price,json=weightedPrice,proto3" json:"weighted_price,omitempty"`
	Volume               float64   `protobuf:"fixed64,7,opt,name=volume,proto3" json:"volume,omitempty"`
	PositionTime         int64     `protobuf:"varint,8,opt,name=position_time,json=positionTime,proto3" json:"position_time,omitempty"`
	ClosingTime          int64     `protobuf:"varint,9,opt,name=closing_time,json=closingTime,proto3" json:"closing_time,omitempty"`
	PositionSide         Side      `protobuf:"varint,10,opt,name=position_side,json=positionSide,proto3,enum=api.Side" json:"position_side,omitempty"`
	PositionReason       Reason    `protobuf:"varint,11,opt,name=position_reason,json=positionReason,proto3,enum=api.Reason" json:"position_reason,omitempty"`
	Sl                   float64   `protobuf:"fixed64,12,opt,name=sl,proto3" json:"sl,omitempty"`
	Tp                   float64   `protobuf:"fixed64,13,opt,name=tp,proto3" json:"tp,omitempty"`
	Swap                 float64   `protobuf:"fixed64,14,opt,name=swap,proto3" json:"swap,omitempty"`
	TraillingPercent     float64   `protobuf:"fixed64,15,opt,name=trailling_percent,json=traillingPercent,proto3" json:"trailling_percent,omitempty"`
	Comment              string    `protobuf:"bytes,16,opt,name=comment,proto3" json:"comment,omitempty"`
	ProfitLiquid         float64   `protobuf:"fixed64,17,opt,name=profit_liquid,json=profitLiquid,proto3" json:"profit_liquid,omitempty"`
	CumulativeFees       float64   `protobuf:"fixed64,18,opt,name=cumulative_fees,json=cumulativeFees,proto3" json:"cumulative_fees,omitempty"`
	Orders               []*Orders `protobuf:"bytes,19,rep,name=Orders,proto3" json:"Orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_776e2c5022e94aef, []int{3}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetPositionId() string {
	if m != nil {
		return m.PositionId
	}
	return ""
}

func (m *Position) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Position) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *Position) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *Position) GetPriceOpen() float64 {
	if m != nil {
		return m.PriceOpen
	}
	return 0
}

func (m *Position) GetWeightedPrice() float64 {
	if m != nil {
		return m.WeightedPrice
	}
	return 0
}

func (m *Position) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Position) GetPositionTime() int64 {
	if m != nil {
		return m.PositionTime
	}
	return 0
}

func (m *Position) GetClosingTime() int64 {
	if m != nil {
		return m.ClosingTime
	}
	return 0
}

func (m *Position) GetPositionSide() Side {
	if m != nil {
		return m.PositionSide
	}
	return Side_BUY
}

func (m *Position) GetPositionReason() Reason {
	if m != nil {
		return m.PositionReason
	}
	return Reason_ORDER_CLIENT
}

func (m *Position) GetSl() float64 {
	if m != nil {
		return m.Sl
	}
	return 0
}

func (m *Position) GetTp() float64 {
	if m != nil {
		return m.Tp
	}
	return 0
}

func (m *Position) GetSwap() float64 {
	if m != nil {
		return m.Swap
	}
	return 0
}

func (m *Position) GetTraillingPercent() float64 {
	if m != nil {
		return m.TraillingPercent
	}
	return 0
}

func (m *Position) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Position) GetProfitLiquid() float64 {
	if m != nil {
		return m.ProfitLiquid
	}
	return 0
}

func (m *Position) GetCumulativeFees() float64 {
	if m != nil {
		return m.CumulativeFees
	}
	return 0
}

func (m *Position) GetOrders() []*Orders {
	if m != nil {
		return m.Orders
	}
	return nil
}

type PositionRequest struct {
	Venue                Venue    `protobuf:"varint,1,opt,name=venue,proto3,enum=api.Venue" json:"venue,omitempty"`
	Product              string   `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionRequest) Reset()         { *m = PositionRequest{} }
func (m *PositionRequest) String() string { return proto.CompactTextString(m) }
func (*PositionRequest) ProtoMessage()    {}
func (*PositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_776e2c5022e94aef, []int{4}
}

func (m *PositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionRequest.Unmarshal(m, b)
}
func (m *PositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionRequest.Marshal(b, m, deterministic)
}
func (m *PositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionRequest.Merge(m, src)
}
func (m *PositionRequest) XXX_Size() int {
	return xxx_messageInfo_PositionRequest.Size(m)
}
func (m *PositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PositionRequest proto.InternalMessageInfo

func (m *PositionRequest) GetVenue() Venue {
	if m != nil {
		return m.Venue
	}
	return Venue_DARKPOOL
}

func (m *PositionRequest) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

type PositionsResult struct {
	Retcode              Retcode     `protobuf:"varint,1,opt,name=retcode,proto3,enum=api.Retcode" json:"retcode,omitempty"`
	Positions            []*Position `protobuf:"bytes,2,rep,name=positions,proto3" json:"positions,omitempty"`
	Comment              string      `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PositionsResult) Reset()         { *m = PositionsResult{} }
func (m *PositionsResult) String() string { return proto.CompactTextString(m) }
func (*PositionsResult) ProtoMessage()    {}
func (*PositionsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_776e2c5022e94aef, []int{5}
}

func (m *PositionsResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsResult.Unmarshal(m, b)
}
func (m *PositionsResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsResult.Marshal(b, m, deterministic)
}
func (m *PositionsResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsResult.Merge(m, src)
}
func (m *PositionsResult) XXX_Size() int {
	return xxx_messageInfo_PositionsResult.Size(m)
}
func (m *PositionsResult) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsResult.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsResult proto.InternalMessageInfo

func (m *PositionsResult) GetRetcode() Retcode {
	if m != nil {
		return m.Retcode
	}
	return Retcode_REJECTX
}

func (m *PositionsResult) GetPositions() []*Position {
	if m != nil {
		return m.Positions
	}
	return nil
}

func (m *PositionsResult) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func init() {
	proto.RegisterType((*Orders)(nil), "api.Orders")
	proto.RegisterType((*OrderRequest)(nil), "api.OrderRequest")
	proto.RegisterType((*OrderResult)(nil), "api.OrderResult")
	proto.RegisterType((*Position)(nil), "api.Position")
	proto.RegisterType((*PositionRequest)(nil), "api.PositionRequest")
	proto.RegisterType((*PositionsResult)(nil), "api.PositionsResult")
}

func init() { proto.RegisterFile("execution.proto", fileDescriptor_776e2c5022e94aef) }

var fileDescriptor_776e2c5022e94aef = []byte{
	// 965 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0x4d, 0x6f, 0xdc, 0x36,
	0x10, 0x85, 0xa4, 0xdd, 0xb5, 0x35, 0xd2, 0x7e, 0x98, 0x6e, 0x0b, 0x21, 0xa8, 0x9b, 0xed, 0x06,
	0x69, 0x17, 0x48, 0xeb, 0x02, 0x69, 0x0f, 0x45, 0x6f, 0x45, 0xe1, 0x00, 0x06, 0x5a, 0xc4, 0xa0,
	0x8d, 0x5c, 0x05, 0x45, 0x1a, 0xa7, 0x44, 0xb5, 0xa2, 0x22, 0x51, 0x4e, 0x7c, 0xcb, 0xad, 0x87,
	0xfe, 0xcc, 0xfe, 0x91, 0x82, 0x43, 0xea, 0x6b, 0x6d, 0xa7, 0xed, 0x8d, 0x7c, 0x6f, 0x38, 0x24,
	0x87, 0xef, 0x8d, 0x04, 0x4b, 0x7c, 0x8f, 0x69, 0xa3, 0x84, 0x2c, 0x4e, 0xcb, 0x4a, 0x2a, 0xc9,
	0xbc, 0xa4, 0x14, 0x8f, 0x00, 0x8b, 0x66, 0x67, 0x80, 0xcd, 0xdf, 0x13, 0x98, 0xbd, 0xac, 0x32,
	0xac, 0x6a, 0xb6, 0x86, 0xe9, 0x0d, 0x16, 0x0d, 0x46, 0xce, 0xda, 0xd9, 0x2e, 0x9e, 0xc3, 0x69,
	0x52, 0x8a, 0xd3, 0x57, 0x1a, 0xe1, 0x86, 0x60, 0x1b, 0x98, 0xa8, 0xdb, 0x12, 0x23, 0x97, 0x02,
	0x16, 0x14, 0x40, 0x8b, 0xaf, 0x6e, 0x4b, 0xe4, 0xc4, 0xb1, 0x13, 0x98, 0xd4, 0x22, 0xc3, 0xc8,
	0xa3, 0x18, 0x9f, 0x62, 0x2e, 0x45, 0x86, 0x9c, 0x60, 0xf6, 0x14, 0xa6, 0xb5, 0x4a, 0x14, 0x46,
	0x13, 0xe2, 0x97, 0x7d, 0x8e, 0x4b, 0x0d, 0x73, 0xc3, 0xb2, 0xaf, 0x61, 0xa9, 0xc4, 0x0e, 0x63,
	0x7c, 0x5f, 0x8a, 0x2a, 0xd1, 0x17, 0x88, 0xa6, 0x6b, 0x67, 0xeb, 0xf1, 0x85, 0x86, 0xcf, 0x3a,
	0x94, 0x9d, 0x00, 0x50, 0x60, 0x8d, 0xaa, 0x29, 0xa3, 0x19, 0xc5, 0xf8, 0x1a, 0xb9, 0xd4, 0x00,
	0xfb, 0x11, 0x42, 0x7d, 0xaa, 0xf8, 0x5a, 0xe4, 0xb9, 0x28, 0xde, 0x44, 0x07, 0xb4, 0xeb, 0xa7,
	0xe3, 0x93, 0xbf, 0x30, 0x24, 0x0f, 0x54, 0x3f, 0x61, 0xdf, 0x81, 0x4f, 0x2b, 0x75, 0xae, 0xe8,
	0x90, 0x96, 0xb1, 0xf1, 0xb2, 0x2b, 0xb1, 0x43, 0x7e, 0xa8, 0xec, 0x88, 0x3d, 0x81, 0x59, 0x85,
	0x49, 0x2d, 0x8b, 0xc8, 0xa7, 0xe8, 0x80, 0xa2, 0x39, 0x41, 0xdc, 0x52, 0x2c, 0x82, 0x83, 0xb2,
	0x92, 0x59, 0x93, 0xaa, 0x08, 0xd6, 0xce, 0xd6, 0xe7, 0xed, 0x94, 0x7d, 0x03, 0x8c, 0x8a, 0x1c,
	0x77, 0x4f, 0x16, 0x8b, 0x2c, 0x0a, 0x28, 0x68, 0x45, 0xcc, 0x59, 0x4b, 0x9c, 0x67, 0xec, 0x33,
	0x98, 0xdd, 0xc8, 0xbc, 0xd9, 0x61, 0x14, 0xae, 0x9d, 0xad, 0xc3, 0xed, 0x8c, 0x7d, 0x02, 0xd3,
	0xb2, 0x12, 0x29, 0x46, 0x73, 0x82, 0xcd, 0x84, 0xad, 0xc0, 0xbb, 0x46, 0x8c, 0x16, 0x84, 0xe9,
	0x21, 0x7b, 0x0c, 0x41, 0x8e, 0xd7, 0x2a, 0xb6, 0x49, 0x96, 0xc4, 0x80, 0x86, 0x5e, 0x99, 0x44,
	0xcf, 0x01, 0xb0, 0x50, 0xd5, 0x6d, 0x4c, 0x0f, 0xbe, 0xa2, 0x1b, 0x1d, 0xf7, 0xf7, 0x3f, 0xd3,
	0x1c, 0xbd, 0xba, 0x8f, 0xed, 0x50, 0x5f, 0x2e, 0x95, 0xbb, 0x1d, 0x16, 0x2a, 0x3a, 0x32, 0x97,
	0xb3, 0xd3, 0xcd, 0x5f, 0x53, 0x08, 0x69, 0x1d, 0xc7, 0xb7, 0x0d, 0xd6, 0x8a, 0x6d, 0x61, 0x96,
	0xa4, 0xf4, 0xac, 0x46, 0x6c, 0x2b, 0x4a, 0x7d, 0x55, 0x25, 0x19, 0xfe, 0x4c, 0x38, 0xb7, 0x7c,
	0xaf, 0x4a, 0xf7, 0x21, 0x55, 0x0e, 0x6a, 0xea, 0x8d, 0x6b, 0xda, 0x57, 0x69, 0x72, 0x7f, 0x95,
	0xa6, 0xc3, 0x2a, 0x7d, 0x0e, 0x7e, 0xad, 0x64, 0x99, 0x8b, 0x9d, 0x50, 0xa4, 0x24, 0x87, 0xf7,
	0x00, 0x5b, 0x80, 0x5b, 0xe7, 0xa4, 0x1f, 0x87, 0xbb, 0x75, 0xae, 0xe7, 0xaa, 0x24, 0x61, 0x38,
	0xdc, 0x55, 0x25, 0x7b, 0x06, 0x47, 0xaa, 0x4a, 0x8c, 0x78, 0xe2, 0x12, 0xab, 0x54, 0x97, 0xc1,
	0x27, 0x7a, 0xd5, 0x11, 0x17, 0x06, 0xd7, 0x5b, 0x65, 0x78, 0x23, 0x8c, 0xb0, 0xc1, 0x6c, 0xd5,
	0x01, 0xec, 0x5b, 0x00, 0xa9, 0x8b, 0x65, 0x6a, 0x1f, 0xdc, 0x6b, 0x36, 0x5f, 0xb6, 0x43, 0xb6,
	0x6d, 0xc3, 0xc9, 0x77, 0xe1, 0xbe, 0xef, 0x4c, 0xa4, 0x1e, 0xb2, 0x5f, 0x80, 0xf5, 0x89, 0x3b,
	0x4f, 0xcc, 0x3f, 0xe6, 0x89, 0x95, 0xdc, 0x43, 0xd8, 0x4f, 0xb0, 0x1c, 0x24, 0x21, 0x7b, 0x2c,
	0x1e, 0xb4, 0xc7, 0x5c, 0x0e, 0xa7, 0xec, 0x14, 0x42, 0xb3, 0xd6, 0x3a, 0x65, 0x79, 0xd7, 0x29,
	0x81, 0x34, 0x3a, 0x21, 0xbb, 0x7c, 0x01, 0x30, 0xe8, 0x00, 0x2b, 0x72, 0xf7, 0x00, 0x79, 0x58,
	0x71, 0xec, 0x11, 0x1c, 0x96, 0xb2, 0x16, 0xb4, 0x8e, 0x11, 0xd5, 0xcd, 0x37, 0x7f, 0xba, 0x10,
	0x58, 0x35, 0xd6, 0x4d, 0xae, 0xd8, 0x57, 0x70, 0x50, 0xa1, 0x4a, 0x65, 0xd6, 0xb6, 0xbe, 0xd0,
	0x1e, 0x88, 0x30, 0xde, 0x92, 0xbd, 0x6c, 0xdc, 0xa1, 0x6c, 0x7a, 0x91, 0x79, 0x23, 0x91, 0x59,
	0xd3, 0x4d, 0x7a, 0xd3, 0x75, 0xbd, 0x6f, 0xfa, 0xd1, 0xde, 0xf7, 0x18, 0x82, 0xf6, 0xa8, 0xba,
	0x05, 0xcc, 0xe8, 0xf4, 0xd0, 0x42, 0xe7, 0x19, 0x3b, 0x85, 0xe3, 0xd7, 0x95, 0xfc, 0x03, 0xab,
	0x71, 0xaf, 0x38, 0xa0, 0xc0, 0x23, 0x43, 0x0d, 0x9b, 0xc5, 0xa0, 0x4a, 0x87, 0x63, 0x5f, 0x7e,
	0x98, 0xc2, 0xe1, 0x85, 0x4d, 0xbc, 0xbf, 0xaf, 0x73, 0x67, 0xdf, 0x13, 0x80, 0x24, 0x4d, 0x65,
	0x53, 0x28, 0xcd, 0xbb, 0xc4, 0xfb, 0x16, 0x39, 0xcf, 0x7a, 0xa7, 0x7a, 0xff, 0xc1, 0xa9, 0x93,
	0xb1, 0x53, 0x4f, 0x00, 0xa8, 0x9a, 0xb1, 0x2c, 0xb1, 0xb0, 0xb6, 0xf4, 0x09, 0x79, 0x59, 0x62,
	0xc1, 0x9e, 0xc2, 0xe2, 0x1d, 0x8a, 0x37, 0xbf, 0x2b, 0xcc, 0x62, 0xf3, 0x04, 0xc6, 0x9f, 0xf3,
	0x16, 0xbd, 0xd8, 0x7b, 0x8a, 0x83, 0xd1, 0x53, 0x3c, 0x81, 0x79, 0x77, 0xb3, 0xae, 0x9f, 0x7b,
	0x3c, 0x6c, 0x41, 0xd2, 0xe6, 0x97, 0x10, 0xa6, 0xb9, 0xac, 0xb5, 0x7d, 0x29, 0xc6, 0xa7, 0x98,
	0xc0, 0x62, 0x56, 0xbe, 0x7d, 0x1e, 0x32, 0x1b, 0xec, 0x9b, 0xad, 0x4b, 0x49, 0x7e, 0xfb, 0x01,
	0x96, 0x5d, 0xbc, 0x55, 0x7c, 0x70, 0x57, 0xf1, 0x8b, 0x36, 0xc6, 0x8a, 0xde, 0x74, 0x9a, 0x70,
	0xaf, 0xd3, 0xcc, 0xbb, 0x4e, 0xc3, 0x60, 0x52, 0xbf, 0x4b, 0x4a, 0xdb, 0xce, 0x69, 0x7c, 0x7f,
	0xf7, 0x59, 0x3e, 0xd0, 0x7d, 0x06, 0x7a, 0x58, 0x8d, 0x5d, 0xa3, 0x0b, 0x55, 0xc9, 0x6b, 0xa1,
	0xe2, 0x5c, 0xbc, 0x6d, 0x44, 0x46, 0xae, 0x72, 0x78, 0x68, 0xc0, 0x5f, 0x09, 0xd3, 0xdf, 0xe6,
	0xb4, 0xd9, 0x35, 0x79, 0xa2, 0xc4, 0x0d, 0xc6, 0xd7, 0x88, 0x35, 0x39, 0xcc, 0xe1, 0x8b, 0x1e,
	0x7e, 0x81, 0x58, 0xeb, 0x2f, 0xa2, 0xf9, 0xb5, 0x88, 0x8e, 0xd7, 0xde, 0x36, 0xb0, 0xb7, 0x36,
	0x10, 0xb7, 0xd4, 0xe6, 0x37, 0x58, 0x5e, 0x74, 0xf7, 0x37, 0x1f, 0x87, 0x7f, 0xff, 0x11, 0x19,
	0x08, 0xc9, 0x1d, 0x09, 0x69, 0xf3, 0xc1, 0xe9, 0xf3, 0xd5, 0xff, 0xd3, 0xdf, 0xcf, 0xc0, 0x6f,
	0x9f, 0xa2, 0x8e, 0x5c, 0x3a, 0xf2, 0x9c, 0x22, 0xbb, 0x03, 0xf6, 0xfc, 0xb0, 0x88, 0xde, 0xa8,
	0x88, 0xaf, 0x67, 0xf4, 0x67, 0xf5, 0xfd, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2e, 0xbd, 0x5d,
	0x16, 0x7d, 0x09, 0x00, 0x00,
}
