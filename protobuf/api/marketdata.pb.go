// Code generated by protoc-gen-go. DO NOT EDIT.
// source: marketdata.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Market Data
type Item struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Volume               float64  `protobuf:"fixed64,2,opt,name=volume,proto3" json:"volume,omitempty"`
	Price                float64  `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{0}
}

func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (m *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(m, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Item) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Item) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type Orderbook struct {
	Product              string   `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Venue                string   `protobuf:"bytes,2,opt,name=venue,proto3" json:"venue,omitempty"`
	SystemTimestamp      string   `protobuf:"bytes,3,opt,name=system_timestamp,json=systemTimestamp,proto3" json:"system_timestamp,omitempty"`
	VenueTimestamp       string   `protobuf:"bytes,4,opt,name=venue_timestamp,json=venueTimestamp,proto3" json:"venue_timestamp,omitempty"`
	Levels               int64    `protobuf:"varint,5,opt,name=levels,proto3" json:"levels,omitempty"`
	Asks                 []*Item  `protobuf:"bytes,6,rep,name=asks,proto3" json:"asks,omitempty"`
	Bids                 []*Item  `protobuf:"bytes,7,rep,name=bids,proto3" json:"bids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Orderbook) Reset()         { *m = Orderbook{} }
func (m *Orderbook) String() string { return proto.CompactTextString(m) }
func (*Orderbook) ProtoMessage()    {}
func (*Orderbook) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{1}
}

func (m *Orderbook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Orderbook.Unmarshal(m, b)
}
func (m *Orderbook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Orderbook.Marshal(b, m, deterministic)
}
func (m *Orderbook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Orderbook.Merge(m, src)
}
func (m *Orderbook) XXX_Size() int {
	return xxx_messageInfo_Orderbook.Size(m)
}
func (m *Orderbook) XXX_DiscardUnknown() {
	xxx_messageInfo_Orderbook.DiscardUnknown(m)
}

var xxx_messageInfo_Orderbook proto.InternalMessageInfo

func (m *Orderbook) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *Orderbook) GetVenue() string {
	if m != nil {
		return m.Venue
	}
	return ""
}

func (m *Orderbook) GetSystemTimestamp() string {
	if m != nil {
		return m.SystemTimestamp
	}
	return ""
}

func (m *Orderbook) GetVenueTimestamp() string {
	if m != nil {
		return m.VenueTimestamp
	}
	return ""
}

func (m *Orderbook) GetLevels() int64 {
	if m != nil {
		return m.Levels
	}
	return 0
}

func (m *Orderbook) GetAsks() []*Item {
	if m != nil {
		return m.Asks
	}
	return nil
}

func (m *Orderbook) GetBids() []*Item {
	if m != nil {
		return m.Bids
	}
	return nil
}

type Trade struct {
	TradeId              int64    `protobuf:"varint,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	VenueTradeId         string   `protobuf:"bytes,2,opt,name=venue_trade_id,json=venueTradeId,proto3" json:"venue_trade_id,omitempty"`
	Product              string   `protobuf:"bytes,3,opt,name=product,proto3" json:"product,omitempty"`
	Venue                string   `protobuf:"bytes,4,opt,name=venue,proto3" json:"venue,omitempty"`
	SystemTimestamp      string   `protobuf:"bytes,5,opt,name=system_timestamp,json=systemTimestamp,proto3" json:"system_timestamp,omitempty"`
	VenueTimestamp       string   `protobuf:"bytes,6,opt,name=venue_timestamp,json=venueTimestamp,proto3" json:"venue_timestamp,omitempty"`
	Price                float64  `protobuf:"fixed64,7,opt,name=price,proto3" json:"price,omitempty"`
	Volume               float64  `protobuf:"fixed64,8,opt,name=volume,proto3" json:"volume,omitempty"`
	OrderSide            string   `protobuf:"bytes,9,opt,name=order_side,json=orderSide,proto3" json:"order_side,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trade) Reset()         { *m = Trade{} }
func (m *Trade) String() string { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()    {}
func (*Trade) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{2}
}

func (m *Trade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trade.Unmarshal(m, b)
}
func (m *Trade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trade.Marshal(b, m, deterministic)
}
func (m *Trade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trade.Merge(m, src)
}
func (m *Trade) XXX_Size() int {
	return xxx_messageInfo_Trade.Size(m)
}
func (m *Trade) XXX_DiscardUnknown() {
	xxx_messageInfo_Trade.DiscardUnknown(m)
}

var xxx_messageInfo_Trade proto.InternalMessageInfo

func (m *Trade) GetTradeId() int64 {
	if m != nil {
		return m.TradeId
	}
	return 0
}

func (m *Trade) GetVenueTradeId() string {
	if m != nil {
		return m.VenueTradeId
	}
	return ""
}

func (m *Trade) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *Trade) GetVenue() string {
	if m != nil {
		return m.Venue
	}
	return ""
}

func (m *Trade) GetSystemTimestamp() string {
	if m != nil {
		return m.SystemTimestamp
	}
	return ""
}

func (m *Trade) GetVenueTimestamp() string {
	if m != nil {
		return m.VenueTimestamp
	}
	return ""
}

func (m *Trade) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Trade) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Trade) GetOrderSide() string {
	if m != nil {
		return m.OrderSide
	}
	return ""
}

type TradeRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	VenueId              int64    `protobuf:"varint,2,opt,name=venue_id,json=venueId,proto3" json:"venue_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeRequest) Reset()         { *m = TradeRequest{} }
func (m *TradeRequest) String() string { return proto.CompactTextString(m) }
func (*TradeRequest) ProtoMessage()    {}
func (*TradeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{3}
}

func (m *TradeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeRequest.Unmarshal(m, b)
}
func (m *TradeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeRequest.Marshal(b, m, deterministic)
}
func (m *TradeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeRequest.Merge(m, src)
}
func (m *TradeRequest) XXX_Size() int {
	return xxx_messageInfo_TradeRequest.Size(m)
}
func (m *TradeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TradeRequest proto.InternalMessageInfo

func (m *TradeRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TradeRequest) GetVenueId() int64 {
	if m != nil {
		return m.VenueId
	}
	return 0
}

type TradeResponse struct {
	Retcode              Retcode  `protobuf:"varint,1,opt,name=retcode,proto3,enum=api.Retcode" json:"retcode,omitempty"`
	Trades               []*Trade `protobuf:"bytes,2,rep,name=trades,proto3" json:"trades,omitempty"`
	Comment              string   `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	Elapsed              string   `protobuf:"bytes,4,opt,name=elapsed,proto3" json:"elapsed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeResponse) Reset()         { *m = TradeResponse{} }
func (m *TradeResponse) String() string { return proto.CompactTextString(m) }
func (*TradeResponse) ProtoMessage()    {}
func (*TradeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{4}
}

func (m *TradeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeResponse.Unmarshal(m, b)
}
func (m *TradeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeResponse.Marshal(b, m, deterministic)
}
func (m *TradeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeResponse.Merge(m, src)
}
func (m *TradeResponse) XXX_Size() int {
	return xxx_messageInfo_TradeResponse.Size(m)
}
func (m *TradeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TradeResponse proto.InternalMessageInfo

func (m *TradeResponse) GetRetcode() Retcode {
	if m != nil {
		return m.Retcode
	}
	return Retcode_REQUEST_WITH_NO_TOKEN
}

func (m *TradeResponse) GetTrades() []*Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

func (m *TradeResponse) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *TradeResponse) GetElapsed() string {
	if m != nil {
		return m.Elapsed
	}
	return ""
}

type Ticker struct {
	Product              string   `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Venue                string   `protobuf:"bytes,2,opt,name=venue,proto3" json:"venue,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Price                float64  `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	OrderSide            Side     `protobuf:"varint,5,opt,name=order_side,json=orderSide,proto3,enum=api.Side" json:"order_side,omitempty"`
	BestBid              float64  `protobuf:"fixed64,6,opt,name=best_bid,json=bestBid,proto3" json:"best_bid,omitempty"`
	BestAsk              float64  `protobuf:"fixed64,7,opt,name=best_ask,json=bestAsk,proto3" json:"best_ask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ticker) Reset()         { *m = Ticker{} }
func (m *Ticker) String() string { return proto.CompactTextString(m) }
func (*Ticker) ProtoMessage()    {}
func (*Ticker) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{5}
}

func (m *Ticker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ticker.Unmarshal(m, b)
}
func (m *Ticker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ticker.Marshal(b, m, deterministic)
}
func (m *Ticker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ticker.Merge(m, src)
}
func (m *Ticker) XXX_Size() int {
	return xxx_messageInfo_Ticker.Size(m)
}
func (m *Ticker) XXX_DiscardUnknown() {
	xxx_messageInfo_Ticker.DiscardUnknown(m)
}

var xxx_messageInfo_Ticker proto.InternalMessageInfo

func (m *Ticker) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *Ticker) GetVenue() string {
	if m != nil {
		return m.Venue
	}
	return ""
}

func (m *Ticker) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Ticker) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Ticker) GetOrderSide() Side {
	if m != nil {
		return m.OrderSide
	}
	return Side_BUY
}

func (m *Ticker) GetBestBid() float64 {
	if m != nil {
		return m.BestBid
	}
	return 0
}

func (m *Ticker) GetBestAsk() float64 {
	if m != nil {
		return m.BestAsk
	}
	return 0
}

type Candle struct {
	Venue                string   `protobuf:"bytes,1,opt,name=venue,proto3" json:"venue,omitempty"`
	Product              string   `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
	Granularity          int64    `protobuf:"varint,3,opt,name=granularity,proto3" json:"granularity,omitempty"`
	Point                int64    `protobuf:"varint,4,opt,name=point,proto3" json:"point,omitempty"`
	Open                 float64  `protobuf:"fixed64,5,opt,name=open,proto3" json:"open,omitempty"`
	Close                float64  `protobuf:"fixed64,6,opt,name=close,proto3" json:"close,omitempty"`
	High                 float64  `protobuf:"fixed64,7,opt,name=high,proto3" json:"high,omitempty"`
	Low                  float64  `protobuf:"fixed64,8,opt,name=low,proto3" json:"low,omitempty"`
	Volume               float64  `protobuf:"fixed64,9,opt,name=volume,proto3" json:"volume,omitempty"`
	Total                float64  `protobuf:"fixed64,10,opt,name=total,proto3" json:"total,omitempty"`
	TotalTrades          int64    `protobuf:"varint,11,opt,name=total_trades,json=totalTrades,proto3" json:"total_trades,omitempty"`
	BuyTotal             int64    `protobuf:"varint,12,opt,name=buy_total,json=buyTotal,proto3" json:"buy_total,omitempty"`
	SellTotal            int64    `protobuf:"varint,13,opt,name=sell_total,json=sellTotal,proto3" json:"sell_total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Candle) Reset()         { *m = Candle{} }
func (m *Candle) String() string { return proto.CompactTextString(m) }
func (*Candle) ProtoMessage()    {}
func (*Candle) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b85761666e9c8c, []int{6}
}

func (m *Candle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candle.Unmarshal(m, b)
}
func (m *Candle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candle.Marshal(b, m, deterministic)
}
func (m *Candle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candle.Merge(m, src)
}
func (m *Candle) XXX_Size() int {
	return xxx_messageInfo_Candle.Size(m)
}
func (m *Candle) XXX_DiscardUnknown() {
	xxx_messageInfo_Candle.DiscardUnknown(m)
}

var xxx_messageInfo_Candle proto.InternalMessageInfo

func (m *Candle) GetVenue() string {
	if m != nil {
		return m.Venue
	}
	return ""
}

func (m *Candle) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *Candle) GetGranularity() int64 {
	if m != nil {
		return m.Granularity
	}
	return 0
}

func (m *Candle) GetPoint() int64 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *Candle) GetOpen() float64 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *Candle) GetClose() float64 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *Candle) GetHigh() float64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *Candle) GetLow() float64 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *Candle) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Candle) GetTotal() float64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Candle) GetTotalTrades() int64 {
	if m != nil {
		return m.TotalTrades
	}
	return 0
}

func (m *Candle) GetBuyTotal() int64 {
	if m != nil {
		return m.BuyTotal
	}
	return 0
}

func (m *Candle) GetSellTotal() int64 {
	if m != nil {
		return m.SellTotal
	}
	return 0
}

func init() {
	proto.RegisterType((*Item)(nil), "api.Item")
	proto.RegisterType((*Orderbook)(nil), "api.Orderbook")
	proto.RegisterType((*Trade)(nil), "api.Trade")
	proto.RegisterType((*TradeRequest)(nil), "api.TradeRequest")
	proto.RegisterType((*TradeResponse)(nil), "api.TradeResponse")
	proto.RegisterType((*Ticker)(nil), "api.Ticker")
	proto.RegisterType((*Candle)(nil), "api.Candle")
}

func init() { proto.RegisterFile("marketdata.proto", fileDescriptor_e6b85761666e9c8c) }

var fileDescriptor_e6b85761666e9c8c = []byte{
	// 625 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcb, 0x6e, 0xdb, 0x3a,
	0x10, 0x85, 0x2c, 0x5b, 0x8e, 0x26, 0x8e, 0x13, 0x10, 0x17, 0x81, 0xee, 0x23, 0x80, 0xaf, 0x50,
	0xb4, 0xee, 0x26, 0x8b, 0xf4, 0x03, 0x8a, 0x3e, 0x36, 0x59, 0x15, 0x60, 0xbd, 0x37, 0x28, 0x73,
	0x90, 0x10, 0x7a, 0x50, 0x15, 0xa9, 0x14, 0xfe, 0x8a, 0xae, 0xfb, 0x4f, 0xed, 0x67, 0xf4, 0x3f,
	0x0a, 0x0e, 0x69, 0x5b, 0xee, 0x03, 0x6d, 0x77, 0x73, 0xce, 0x0c, 0x07, 0x73, 0xce, 0x0c, 0x08,
	0x17, 0xb5, 0xe8, 0x4a, 0xb4, 0x52, 0x58, 0x71, 0xdd, 0x76, 0xda, 0x6a, 0x16, 0x8b, 0x56, 0xfd,
	0x03, 0xd8, 0xf4, 0xb5, 0x27, 0xf2, 0xd7, 0x30, 0xbe, 0xb5, 0x58, 0xb3, 0x39, 0x8c, 0x94, 0xcc,
	0xa2, 0x45, 0xb4, 0x8c, 0xf9, 0x48, 0x49, 0x76, 0x09, 0xc9, 0x83, 0xae, 0xfa, 0x1a, 0xb3, 0xd1,
	0x22, 0x5a, 0x46, 0x3c, 0x20, 0xf6, 0x17, 0x4c, 0xda, 0x4e, 0x6d, 0x30, 0x8b, 0x89, 0xf6, 0x20,
	0xff, 0x12, 0x41, 0xfa, 0xa6, 0x93, 0xd8, 0x15, 0x5a, 0x97, 0x2c, 0x83, 0x69, 0xdb, 0x69, 0xd9,
	0x6f, 0x2c, 0x35, 0x4c, 0xf9, 0x0e, 0xba, 0xd7, 0x0f, 0xd8, 0xf4, 0xbe, 0x69, 0xca, 0x3d, 0x60,
	0x4f, 0xe1, 0xc2, 0x6c, 0x8d, 0xc5, 0x7a, 0x6d, 0x55, 0x8d, 0xc6, 0x8a, 0xba, 0xa5, 0xf6, 0x29,
	0x3f, 0xf7, 0xfc, 0x6a, 0x47, 0xb3, 0x27, 0x70, 0x4e, 0x6f, 0x06, 0x95, 0x63, 0xaa, 0x9c, 0x13,
	0x7d, 0x28, 0xbc, 0x84, 0xa4, 0xc2, 0x07, 0xac, 0x4c, 0x36, 0x21, 0x4d, 0x01, 0xb1, 0x2b, 0x18,
	0x0b, 0x53, 0x9a, 0x2c, 0x59, 0xc4, 0xcb, 0xd3, 0x9b, 0xf4, 0x5a, 0xb4, 0xea, 0xda, 0x19, 0xc0,
	0x89, 0x76, 0xe9, 0x42, 0x49, 0x93, 0x4d, 0xbf, 0x4b, 0x3b, 0x3a, 0xff, 0x38, 0x82, 0xc9, 0xaa,
	0x13, 0x12, 0xd9, 0xdf, 0x70, 0x62, 0x5d, 0xb0, 0xde, 0xbb, 0x36, 0x25, 0x7c, 0x2b, 0xd9, 0x23,
	0x98, 0x87, 0x19, 0x77, 0x05, 0x5e, 0xed, 0xcc, 0x8f, 0x18, 0xaa, 0x06, 0x26, 0xc5, 0x3f, 0x31,
	0x69, 0xfc, 0x2b, 0x93, 0x26, 0xbf, 0x6d, 0x52, 0xf2, 0x43, 0x93, 0xf6, 0xcb, 0x9c, 0x0e, 0x96,
	0x39, 0x58, 0xfd, 0xc9, 0xd1, 0xea, 0xaf, 0x00, 0xb4, 0xdb, 0xf1, 0xda, 0x28, 0x89, 0x59, 0x4a,
	0x1d, 0x53, 0x62, 0xde, 0x2a, 0x89, 0xf9, 0x73, 0x98, 0x91, 0x36, 0x8e, 0xef, 0x7a, 0x34, 0x24,
	0xc3, 0xea, 0x12, 0x9b, 0x70, 0x03, 0x1e, 0x38, 0xdf, 0xfc, 0x6c, 0xc1, 0x96, 0x98, 0x4f, 0x09,
	0xdf, 0xca, 0xfc, 0x43, 0x04, 0x67, 0xa1, 0x83, 0x69, 0x75, 0x63, 0x90, 0x3d, 0x86, 0x69, 0x87,
	0x76, 0xa3, 0x25, 0x52, 0x93, 0xf9, 0xcd, 0x8c, 0x16, 0xc2, 0x3d, 0xc7, 0x77, 0x49, 0x96, 0x43,
	0x42, 0x5e, 0x9b, 0x6c, 0x44, 0x7b, 0x03, 0x2a, 0xf3, 0xbd, 0x42, 0xc6, 0xf9, 0xbd, 0xd1, 0x75,
	0x8d, 0xcd, 0xde, 0xef, 0x00, 0x5d, 0x06, 0x2b, 0xd1, 0x1a, 0x94, 0xc1, 0xf1, 0x1d, 0xcc, 0x3f,
	0x45, 0x90, 0xac, 0xd4, 0xa6, 0xc4, 0xee, 0x8f, 0x6f, 0xfa, 0x3f, 0x48, 0x8f, 0x8f, 0x39, 0xe6,
	0x07, 0xe2, 0x60, 0xfc, 0x78, 0x68, 0xfc, 0xf2, 0xc8, 0xe0, 0x09, 0x29, 0xf6, 0x27, 0xe8, 0x0c,
	0x1e, 0x78, 0xed, 0x5c, 0x2c, 0xd0, 0xd8, 0x75, 0xa1, 0x24, 0xad, 0x36, 0xe2, 0x53, 0x87, 0x5f,
	0x2a, 0xb9, 0x4f, 0x09, 0x53, 0x86, 0xb5, 0x52, 0xea, 0x85, 0x29, 0xf3, 0xcf, 0x23, 0x48, 0x5e,
	0x89, 0x46, 0x56, 0x78, 0x18, 0x3a, 0x1a, 0x0e, 0x3d, 0x10, 0x39, 0x3a, 0x16, 0xb9, 0x80, 0xd3,
	0xbb, 0x4e, 0x34, 0x7d, 0x25, 0x3a, 0x65, 0xb7, 0x41, 0xd0, 0x90, 0x22, 0x49, 0x5a, 0x35, 0x96,
	0x24, 0xc5, 0xdc, 0x03, 0xc6, 0x60, 0xac, 0x5b, 0x6c, 0x48, 0x4c, 0xc4, 0x29, 0x76, 0x95, 0x9b,
	0x4a, 0x1b, 0x0c, 0x93, 0x7b, 0xe0, 0x2a, 0xef, 0xd5, 0xdd, 0x7d, 0x98, 0x99, 0x62, 0x76, 0x01,
	0x71, 0xa5, 0xdf, 0x87, 0x33, 0x74, 0xe1, 0xe0, 0x36, 0xd3, 0x6f, 0xbf, 0x25, 0xab, 0xad, 0xa8,
	0x32, 0xf0, 0x3d, 0x09, 0xb0, 0xff, 0x61, 0x46, 0xc1, 0x3a, 0x5c, 0xc7, 0xa9, 0x1f, 0x9b, 0xb8,
	0x95, 0x3f, 0x8b, 0x7f, 0x21, 0x2d, 0xfa, 0xed, 0xda, 0x3f, 0x9e, 0x51, 0xfe, 0xa4, 0xe8, 0xb7,
	0x2b, 0x7a, 0x7f, 0x05, 0x60, 0xb0, 0xaa, 0x42, 0xf6, 0xcc, 0x6f, 0xd1, 0x31, 0x94, 0x2e, 0x12,
	0xfa, 0x42, 0x9f, 0x7d, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x50, 0x71, 0xdd, 0x70, 0x67, 0x05, 0x00,
	0x00,
}
