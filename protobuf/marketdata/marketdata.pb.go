// Code generated by protoc-gen-go. DO NOT EDIT.
// source: marketdata.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OHLC struct {
	Open                 float64  `protobuf:"fixed64,1,opt,name=open,proto3" json:"open,omitempty"`
	High                 float64  `protobuf:"fixed64,2,opt,name=high,proto3" json:"high,omitempty"`
	Low                  float64  `protobuf:"fixed64,3,opt,name=low,proto3" json:"low,omitempty"`
	Close                float64  `protobuf:"fixed64,4,opt,name=close,proto3" json:"close,omitempty"`
	LastPrice            float64  `protobuf:"fixed64,5,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	Trades               int32    `protobuf:"varint,6,opt,name=trades,proto3" json:"trades,omitempty"`
	Volume               float64  `protobuf:"fixed64,7,opt,name=volume,proto3" json:"volume,omitempty"`
	Duration             int32    `protobuf:"varint,8,opt,name=duration,proto3" json:"duration,omitempty"`
	Timestamp            int64    `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BuyCount             int64    `protobuf:"varint,10,opt,name=buy_count,json=buyCount,proto3" json:"buy_count,omitempty"`
	SellCount            int64    `protobuf:"varint,11,opt,name=sell_count,json=sellCount,proto3" json:"sell_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OHLC) Reset()         { *m = OHLC{} }
func (m *OHLC) String() string { return proto.CompactTextString(m) }
func (*OHLC) ProtoMessage()    {}
func (*OHLC) Descriptor() ([]byte, []int) {
	return fileDescriptor_marketdata_cb64e9d935c97869, []int{0}
}
func (m *OHLC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OHLC.Unmarshal(m, b)
}
func (m *OHLC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OHLC.Marshal(b, m, deterministic)
}
func (dst *OHLC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OHLC.Merge(dst, src)
}
func (m *OHLC) XXX_Size() int {
	return xxx_messageInfo_OHLC.Size(m)
}
func (m *OHLC) XXX_DiscardUnknown() {
	xxx_messageInfo_OHLC.DiscardUnknown(m)
}

var xxx_messageInfo_OHLC proto.InternalMessageInfo

func (m *OHLC) GetOpen() float64 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *OHLC) GetHigh() float64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *OHLC) GetLow() float64 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *OHLC) GetClose() float64 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *OHLC) GetLastPrice() float64 {
	if m != nil {
		return m.LastPrice
	}
	return 0
}

func (m *OHLC) GetTrades() int32 {
	if m != nil {
		return m.Trades
	}
	return 0
}

func (m *OHLC) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *OHLC) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *OHLC) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *OHLC) GetBuyCount() int64 {
	if m != nil {
		return m.BuyCount
	}
	return 0
}

func (m *OHLC) GetSellCount() int64 {
	if m != nil {
		return m.SellCount
	}
	return 0
}

type OHLCMessage struct {
	Price  float64 `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	Volume float64 `protobuf:"fixed64,2,opt,name=volume,proto3" json:"volume,omitempty"`
	// OrderType                    order_type       = 3;
	Time                 int64    `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OHLCMessage) Reset()         { *m = OHLCMessage{} }
func (m *OHLCMessage) String() string { return proto.CompactTextString(m) }
func (*OHLCMessage) ProtoMessage()    {}
func (*OHLCMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_marketdata_cb64e9d935c97869, []int{1}
}
func (m *OHLCMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OHLCMessage.Unmarshal(m, b)
}
func (m *OHLCMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OHLCMessage.Marshal(b, m, deterministic)
}
func (dst *OHLCMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OHLCMessage.Merge(dst, src)
}
func (m *OHLCMessage) XXX_Size() int {
	return xxx_messageInfo_OHLCMessage.Size(m)
}
func (m *OHLCMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_OHLCMessage.DiscardUnknown(m)
}

var xxx_messageInfo_OHLCMessage proto.InternalMessageInfo

func (m *OHLCMessage) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OHLCMessage) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *OHLCMessage) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type Item struct {
	Amount               float64  `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Price                float64  `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_marketdata_cb64e9d935c97869, []int{2}
}
func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (dst *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(dst, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Item) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type Orderbook struct {
	Product              Product   `protobuf:"varint,1,opt,name=product,proto3,enum=api.Product" json:"product,omitempty"`
	Timestamp            uint64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Levels               uint32    `protobuf:"varint,3,opt,name=levels,proto3" json:"levels,omitempty"`
	Asks                 []*Item   `protobuf:"bytes,4,rep,name=asks,proto3" json:"asks,omitempty"`
	Bids                 []*Item   `protobuf:"bytes,5,rep,name=bids,proto3" json:"bids,omitempty"`
	VenueType            VenueType `protobuf:"varint,6,opt,name=venue_type,json=venueType,proto3,enum=api.VenueType" json:"venue_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Orderbook) Reset()         { *m = Orderbook{} }
func (m *Orderbook) String() string { return proto.CompactTextString(m) }
func (*Orderbook) ProtoMessage()    {}
func (*Orderbook) Descriptor() ([]byte, []int) {
	return fileDescriptor_marketdata_cb64e9d935c97869, []int{3}
}
func (m *Orderbook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Orderbook.Unmarshal(m, b)
}
func (m *Orderbook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Orderbook.Marshal(b, m, deterministic)
}
func (dst *Orderbook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Orderbook.Merge(dst, src)
}
func (m *Orderbook) XXX_Size() int {
	return xxx_messageInfo_Orderbook.Size(m)
}
func (m *Orderbook) XXX_DiscardUnknown() {
	xxx_messageInfo_Orderbook.DiscardUnknown(m)
}

var xxx_messageInfo_Orderbook proto.InternalMessageInfo

func (m *Orderbook) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_BTC_USD
}

func (m *Orderbook) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Orderbook) GetLevels() uint32 {
	if m != nil {
		return m.Levels
	}
	return 0
}

func (m *Orderbook) GetAsks() []*Item {
	if m != nil {
		return m.Asks
	}
	return nil
}

func (m *Orderbook) GetBids() []*Item {
	if m != nil {
		return m.Bids
	}
	return nil
}

func (m *Orderbook) GetVenueType() VenueType {
	if m != nil {
		return m.VenueType
	}
	return VenueType_SPOT
}

type Candle struct {
	Product              Product    `protobuf:"varint,1,opt,name=product,proto3,enum=api.Product" json:"product,omitempty"`
	Period               Period     `protobuf:"varint,2,opt,name=period,proto3,enum=api.Period" json:"period,omitempty"`
	Open                 float64    `protobuf:"fixed64,3,opt,name=open,proto3" json:"open,omitempty"`
	High                 float64    `protobuf:"fixed64,4,opt,name=high,proto3" json:"high,omitempty"`
	Low                  float64    `protobuf:"fixed64,5,opt,name=low,proto3" json:"low,omitempty"`
	Close                float64    `protobuf:"fixed64,6,opt,name=close,proto3" json:"close,omitempty"`
	Volume               float64    `protobuf:"fixed64,7,opt,name=volume,proto3" json:"volume,omitempty"`
	CandleType           CandleType `protobuf:"varint,8,opt,name=candle_type,json=candleType,proto3,enum=api.CandleType" json:"candle_type,omitempty"`
	VenueType            VenueType  `protobuf:"varint,9,opt,name=venue_type,json=venueType,proto3,enum=api.VenueType" json:"venue_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Candle) Reset()         { *m = Candle{} }
func (m *Candle) String() string { return proto.CompactTextString(m) }
func (*Candle) ProtoMessage()    {}
func (*Candle) Descriptor() ([]byte, []int) {
	return fileDescriptor_marketdata_cb64e9d935c97869, []int{4}
}
func (m *Candle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candle.Unmarshal(m, b)
}
func (m *Candle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candle.Marshal(b, m, deterministic)
}
func (dst *Candle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candle.Merge(dst, src)
}
func (m *Candle) XXX_Size() int {
	return xxx_messageInfo_Candle.Size(m)
}
func (m *Candle) XXX_DiscardUnknown() {
	xxx_messageInfo_Candle.DiscardUnknown(m)
}

var xxx_messageInfo_Candle proto.InternalMessageInfo

func (m *Candle) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_BTC_USD
}

func (m *Candle) GetPeriod() Period {
	if m != nil {
		return m.Period
	}
	return Period_PERIOD_CURRENT
}

func (m *Candle) GetOpen() float64 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *Candle) GetHigh() float64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *Candle) GetLow() float64 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *Candle) GetClose() float64 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *Candle) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Candle) GetCandleType() CandleType {
	if m != nil {
		return m.CandleType
	}
	return CandleType_VOLUME
}

func (m *Candle) GetVenueType() VenueType {
	if m != nil {
		return m.VenueType
	}
	return VenueType_SPOT
}

type Trade struct {
	Product              Product   `protobuf:"varint,1,opt,name=product,proto3,enum=api.Product" json:"product,omitempty"`
	Timestamp            uint64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Price                float64   `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Size                 float64   `protobuf:"fixed64,4,opt,name=size,proto3" json:"size,omitempty"`
	OrderSide            OrderType `protobuf:"varint,5,opt,name=order_side,json=orderSide,proto3,enum=api.OrderType" json:"order_side,omitempty"`
	VenueType            VenueType `protobuf:"varint,6,opt,name=venue_type,json=venueType,proto3,enum=api.VenueType" json:"venue_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Trade) Reset()         { *m = Trade{} }
func (m *Trade) String() string { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()    {}
func (*Trade) Descriptor() ([]byte, []int) {
	return fileDescriptor_marketdata_cb64e9d935c97869, []int{5}
}
func (m *Trade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trade.Unmarshal(m, b)
}
func (m *Trade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trade.Marshal(b, m, deterministic)
}
func (dst *Trade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trade.Merge(dst, src)
}
func (m *Trade) XXX_Size() int {
	return xxx_messageInfo_Trade.Size(m)
}
func (m *Trade) XXX_DiscardUnknown() {
	xxx_messageInfo_Trade.DiscardUnknown(m)
}

var xxx_messageInfo_Trade proto.InternalMessageInfo

func (m *Trade) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_BTC_USD
}

func (m *Trade) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Trade) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Trade) GetSize() float64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Trade) GetOrderSide() OrderType {
	if m != nil {
		return m.OrderSide
	}
	return OrderType_BUY
}

func (m *Trade) GetVenueType() VenueType {
	if m != nil {
		return m.VenueType
	}
	return VenueType_SPOT
}

type Ticker struct {
	Product              Product   `protobuf:"varint,1,opt,name=product,proto3,enum=api.Product" json:"product,omitempty"`
	Timestamp            uint64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Price                float64   `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	OrderSide            OrderType `protobuf:"varint,4,opt,name=order_side,json=orderSide,proto3,enum=api.OrderType" json:"order_side,omitempty"`
	BestBid              float64   `protobuf:"fixed64,5,opt,name=best_bid,json=bestBid,proto3" json:"best_bid,omitempty"`
	BestAsk              float64   `protobuf:"fixed64,6,opt,name=best_ask,json=bestAsk,proto3" json:"best_ask,omitempty"`
	VenueType            VenueType `protobuf:"varint,7,opt,name=venue_type,json=venueType,proto3,enum=api.VenueType" json:"venue_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Ticker) Reset()         { *m = Ticker{} }
func (m *Ticker) String() string { return proto.CompactTextString(m) }
func (*Ticker) ProtoMessage()    {}
func (*Ticker) Descriptor() ([]byte, []int) {
	return fileDescriptor_marketdata_cb64e9d935c97869, []int{6}
}
func (m *Ticker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ticker.Unmarshal(m, b)
}
func (m *Ticker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ticker.Marshal(b, m, deterministic)
}
func (dst *Ticker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ticker.Merge(dst, src)
}
func (m *Ticker) XXX_Size() int {
	return xxx_messageInfo_Ticker.Size(m)
}
func (m *Ticker) XXX_DiscardUnknown() {
	xxx_messageInfo_Ticker.DiscardUnknown(m)
}

var xxx_messageInfo_Ticker proto.InternalMessageInfo

func (m *Ticker) GetProduct() Product {
	if m != nil {
		return m.Product
	}
	return Product_BTC_USD
}

func (m *Ticker) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Ticker) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Ticker) GetOrderSide() OrderType {
	if m != nil {
		return m.OrderSide
	}
	return OrderType_BUY
}

func (m *Ticker) GetBestBid() float64 {
	if m != nil {
		return m.BestBid
	}
	return 0
}

func (m *Ticker) GetBestAsk() float64 {
	if m != nil {
		return m.BestAsk
	}
	return 0
}

func (m *Ticker) GetVenueType() VenueType {
	if m != nil {
		return m.VenueType
	}
	return VenueType_SPOT
}

func init() {
	proto.RegisterType((*OHLC)(nil), "api.OHLC")
	proto.RegisterType((*OHLCMessage)(nil), "api.OHLCMessage")
	proto.RegisterType((*Item)(nil), "api.Item")
	proto.RegisterType((*Orderbook)(nil), "api.Orderbook")
	proto.RegisterType((*Candle)(nil), "api.Candle")
	proto.RegisterType((*Trade)(nil), "api.Trade")
	proto.RegisterType((*Ticker)(nil), "api.Ticker")
}

func init() { proto.RegisterFile("marketdata.proto", fileDescriptor_marketdata_cb64e9d935c97869) }

var fileDescriptor_marketdata_cb64e9d935c97869 = []byte{
	// 581 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0x25, 0x4d, 0x9a, 0x36, 0xb7, 0x5a, 0x97, 0x41, 0x96, 0x71, 0x75, 0xa1, 0x54, 0x90, 0xbe,
	0xb8, 0x48, 0xf5, 0x0f, 0xe8, 0xbe, 0x28, 0x28, 0xbb, 0xc4, 0xc5, 0xd7, 0x32, 0xc9, 0x5c, 0x76,
	0x87, 0x26, 0x99, 0x90, 0x99, 0x54, 0xea, 0x5f, 0x11, 0xfc, 0x57, 0xfa, 0x5b, 0x7c, 0x94, 0xb9,
	0x93, 0x76, 0xbb, 0x1f, 0xb2, 0x0a, 0xfa, 0x76, 0xef, 0x39, 0x99, 0x99, 0x73, 0xee, 0x9c, 0x09,
	0xec, 0x95, 0xa2, 0x59, 0xa2, 0x95, 0xc2, 0x8a, 0xa3, 0xba, 0xd1, 0x56, 0xb3, 0x50, 0xd4, 0xea,
	0x00, 0xb0, 0x6a, 0x4b, 0x0f, 0x4c, 0xbf, 0xf6, 0x20, 0x3a, 0x79, 0xfb, 0xfe, 0x98, 0x31, 0x88,
	0x74, 0x8d, 0x15, 0x0f, 0x26, 0xc1, 0x2c, 0x48, 0xa9, 0x76, 0xd8, 0x85, 0x3a, 0xbf, 0xe0, 0x3d,
	0x8f, 0xb9, 0x9a, 0xed, 0x41, 0x58, 0xe8, 0xcf, 0x3c, 0x24, 0xc8, 0x95, 0xec, 0x21, 0xf4, 0xf3,
	0x42, 0x1b, 0xe4, 0x11, 0x61, 0xbe, 0x61, 0x87, 0x00, 0x85, 0x30, 0x76, 0x51, 0x37, 0x2a, 0x47,
	0xde, 0x27, 0x2a, 0x71, 0xc8, 0xa9, 0x03, 0xd8, 0x3e, 0xc4, 0xb6, 0x11, 0x12, 0x0d, 0x8f, 0x27,
	0xc1, 0xac, 0x9f, 0x76, 0x9d, 0xc3, 0x57, 0xba, 0x68, 0x4b, 0xe4, 0x03, 0x5a, 0xd2, 0x75, 0xec,
	0x00, 0x86, 0xb2, 0x6d, 0x84, 0x55, 0xba, 0xe2, 0x43, 0x5a, 0xb1, 0xed, 0xd9, 0x13, 0x48, 0xac,
	0x2a, 0xd1, 0x58, 0x51, 0xd6, 0x3c, 0x99, 0x04, 0xb3, 0x30, 0xbd, 0x04, 0xd8, 0x63, 0x48, 0xb2,
	0x76, 0xbd, 0xc8, 0x75, 0x5b, 0x59, 0x0e, 0xc4, 0x0e, 0xb3, 0x76, 0x7d, 0xec, 0x7a, 0xa7, 0xd2,
	0x60, 0x51, 0x74, 0xec, 0xc8, 0xaf, 0x75, 0x08, 0xd1, 0xd3, 0x13, 0x18, 0xb9, 0xe1, 0x7c, 0x40,
	0x63, 0xc4, 0x39, 0x3a, 0xa7, 0xde, 0x8e, 0x1f, 0x92, 0x6f, 0x76, 0x24, 0xf7, 0xae, 0x48, 0x66,
	0x10, 0x39, 0x15, 0x34, 0xaa, 0x30, 0xa5, 0x7a, 0xfa, 0x0a, 0xa2, 0x77, 0x16, 0x4b, 0xb7, 0x46,
	0x94, 0x74, 0xa6, 0xdf, 0xaa, 0xeb, 0x2e, 0x4f, 0xe8, 0xed, 0x9c, 0x30, 0xfd, 0x11, 0x40, 0x72,
	0xd2, 0x48, 0x6c, 0x32, 0xad, 0x97, 0xec, 0x19, 0x0c, 0xea, 0x46, 0xcb, 0x36, 0xf7, 0x8b, 0xc7,
	0xf3, 0x7b, 0x47, 0xa2, 0x56, 0x47, 0xa7, 0x1e, 0x4b, 0x37, 0xe4, 0xd5, 0xb1, 0xb8, 0xfd, 0xa2,
	0xdd, 0xb1, 0xec, 0x43, 0x5c, 0xe0, 0x0a, 0x0b, 0x43, 0xfa, 0xee, 0xa7, 0x5d, 0xc7, 0x0e, 0x21,
	0x12, 0x66, 0x69, 0x78, 0x34, 0x09, 0x67, 0xa3, 0x79, 0x42, 0x5b, 0x3b, 0xc9, 0x29, 0xc1, 0x8e,
	0xce, 0x94, 0x34, 0xbc, 0x7f, 0x83, 0x76, 0x30, 0x7b, 0x0e, 0xb0, 0xc2, 0xaa, 0xc5, 0x85, 0x5d,
	0xd7, 0x48, 0x57, 0x3b, 0x9e, 0x8f, 0xe9, 0xa3, 0x4f, 0x0e, 0x3e, 0x5b, 0xd7, 0x98, 0x26, 0xab,
	0x4d, 0x39, 0xfd, 0xd6, 0x83, 0xf8, 0x58, 0x54, 0xb2, 0xc0, 0x3f, 0x76, 0xf5, 0x14, 0xe2, 0x1a,
	0x1b, 0xa5, 0x25, 0x59, 0x1a, 0xcf, 0x47, 0xfe, 0x33, 0x82, 0xd2, 0x8e, 0xda, 0x86, 0x39, 0xbc,
	0x25, 0xcc, 0xd1, 0xcd, 0x30, 0xf7, 0x6f, 0x09, 0x73, 0xbc, 0x1b, 0xe6, 0xdf, 0xa5, 0xf2, 0x05,
	0x8c, 0x72, 0x92, 0xef, 0xfd, 0x0e, 0x49, 0xd1, 0x03, 0x52, 0xe4, 0x6d, 0x91, 0x61, 0xc8, 0xb7,
	0xf5, 0xb5, 0x01, 0x25, 0x77, 0x0d, 0xe8, 0x7b, 0x00, 0xfd, 0x33, 0xf7, 0x32, 0xfe, 0xd1, 0xad,
	0x6f, 0xf3, 0x15, 0xee, 0x26, 0x98, 0x41, 0x64, 0xd4, 0x97, 0xcd, 0x03, 0xa6, 0xda, 0x09, 0xd5,
	0x2e, 0x72, 0x0b, 0xa3, 0xa4, 0x7f, 0xbf, 0x1b, 0xa1, 0x94, 0x44, 0x2f, 0x94, 0xbe, 0xf8, 0xa8,
	0x24, 0xfe, 0xed, 0xc5, 0xff, 0x0c, 0x20, 0x3e, 0x53, 0xf9, 0x12, 0x9b, 0xff, 0x6a, 0xec, 0xaa,
	0x89, 0xe8, 0x2e, 0x13, 0x8f, 0x60, 0x98, 0xa1, 0xb1, 0x8b, 0x4c, 0xc9, 0x2e, 0x13, 0x03, 0xd7,
	0xbf, 0x51, 0x72, 0x4b, 0x09, 0xb3, 0xec, 0xa2, 0x41, 0xd4, 0x6b, 0xb3, 0xbc, 0x66, 0x7d, 0x70,
	0x87, 0xf5, 0x2c, 0xa6, 0x1f, 0xef, 0xcb, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb5, 0xd6, 0x39,
	0x23, 0x9d, 0x05, 0x00, 0x00,
}
