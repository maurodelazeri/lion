syntax = "proto3";
package api;
import "auth.proto";
import "venues.proto";
import "execution.proto";
import "backtesting.proto";
import "reports.proto";
import "accounts.proto";
import "balances.proto";

// https://www.mql5.com/en/docs/standardlibrary/tradeclasses/ctrade/ctradepositionclose

// The API service definition.
service API {   
  // Get all Order for a user with filter - A server-to-client streaming RPC.
 // rpc GetOrders(OrderFilter) returns (stream Order) {}
  // Order request - A simple RPC 
  rpc OrderSend(OrderRequest) returns (OrderResult) {}
  rpc GetPositions(PositionRequest) returns (PositionsResult) {}
  rpc GetHistoticalTrades(HistoricalTradesRequest) returns (stream HistoricalTradesResult) {}
  rpc GetBacktestingToken(BacktestingTokenRequest) returns (BacktestingTokenResponse) {}
  rpc Backtesting(stream BacktestingRequest) returns (stream BacktestingResponse) {}

  rpc GetVenues(VenuesRequest) returns (VenuesResponse) {}
  rpc PostVenues(VenuesPostRequest) returns (VenuesPostResponse) {}
  rpc GetVenueDetail(VenueDetailedRequest) returns (VenueDetailedResponse) {}
  rpc GetVenueProductDetail(VenueProductRequest) returns (VenueProductResponse) {}
  rpc PostProduct(ProductPostRequest) returns (ProductPostResponse) {}

  rpc Login(LoginRequest) returns (LoginResponse) {}

  rpc GetAccounts(AccountsRequest) returns (AccountsResponse) {}
  rpc PostAccount(AccountsPostRequest) returns (AccountsPostResponse) {}
  rpc GetAccountBalances(AccountBalanceRequest) returns (AccountBalanceResponse) {}
  rpc GetBalance(BalanceRequest) returns (BalanceResponse) {}
  rpc PostBalance(BalancePostRequest) returns (BalancePostResponse) {}

} 

