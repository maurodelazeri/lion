syntax = "proto3";
package api;

 enum Venue{
	DARKPOOL    			=  0;
	COINBASEPRO 			=  1;  // 192.168.1.204
	BITMEX      			=  2;  // 192.168.1.205
	BITFINEX    			=  3;  // 192.168.1.206
	BINANCE     			=  4;  // 192.168.1.203
	GEMINI      			=  5;  // 192.168.1.211 
	OKEX_CHINA_FUT        	=  6;  // 192.168.1.208
	OKEX_CHINA_SPOT        	=  7;  // 192.168.1.207
	HUOBIPRO    			=  8;  // 192.168.1.209
	GATEIO      			=  9;  // 192.168.1.210
	POLONIEX    			=  10; // 192.168.1.212
	ZB          			=  11; // 192.168.1.213
	FOXBIT      			=  12; // 192.168.1.214
	BITCOINTOYOU    		=  13; // 192.168.1.215
	BITCAMBIO        		=  14; // 192.168.1.216
	DERIBIT                 =  15; // 192.168.1.217
   }
  
 enum SystemMode{
	DEMO               = 0;
	LIVE               = 1;
	BACKTESTING        = 2;
  };
  
   enum AccountType{
	NET                 = 0;
	HEDGE               = 1;
  };
  
 enum VenueType{
   SPOT       = 0;
   FUTURES    = 1;
  };
  
 enum Currency{
	 BTC   = 0;
	 USD   = 1;
	 ETH   = 2;
	 EOS   = 3;
	 XRP   = 4;
	 BCH   = 5;
	 LTC   = 6;
	 XLM   = 7;
	 ADA   = 8;
	 ZEC   = 9;
	 QTUM  = 10;
	 NANO  = 11;
	 ETC   = 12;
	 XRM   = 13;
	 OMG   = 14;
	 DASH  = 15;
	 NEO   = 16;
	 USDT  = 17;
	 USDC  = 18;
	 PAX   = 19;
	 TUSD  = 20;
	 BRL   = 21;
	 JPY   = 22;
	 WON   = 23;
   }
   
   enum Product{
	 BTC_USD 		= 0;
	 ETH_BTC 		= 1;
	 ETH_USD 		= 2;
	 EOS_USD 		= 3;
	 EOS_BTC 		= 4;
	 EOS_ETH 		= 5;
	 XRP_USD 		= 6;
	 XRP_BTC 		= 7;
	 XRP_ETH 		= 8;
	 BCH_USD 		= 9;
	 BCH_BTC 		= 10;
	 BCH_ETH 		= 11;
	 LTC_USD 		= 12;
	 LTC_BTC 		= 13;
	 LTC_ETH 		= 14;
	 XLM_USD 		= 15;
	 XLM_BTC 		= 16;
	 XLM_ETH 		= 17;
	 ADA_USD 		= 18;
	 ADA_BTC 		= 19;
	 ADA_ETH 		= 20;
	 ZEC_USD 		= 21;
	 ZEC_BTC 		= 22;
	 ZEC_ETH 		= 23;
	 QTUM_USD 		= 24;
	 QTUM_BTC 		= 25;
	 QTUM_ETH 		= 26;
	 NANO_USD 		= 27;
	 NANO_BTC 		= 28;
	 NANO_ETH 		= 29;
	 ETC_USD 		= 30;
	 ETC_BTC 		= 31;
	 ETC_ETH 		= 32;
	 XMR_USD 		= 33;
	 XMR_BTC 		= 34;
	 XMR_ETH 		= 35;
	 OMG_USD 		= 36;
	 OMG_BTC 		= 37;
	 OMG_ETH 		= 38;
	 DASH_USD 		= 39;
	 DASH_BTC 		= 40;
	 DASH_ETH 		= 41;
	 NEO_USD 		= 42;
	 NEO_BTC 		= 43;
	 NEO_ETH 		= 44;
	 BTC_USDT 		= 45;
	 ETH_USDT 		= 46;
	 EOS_USDT 		= 47;
	 XRP_USDT 		= 48;
	 BCH_USDT 		= 49;
	 LTC_USDT 		= 50;
	 XLM_USDT 		= 51;
	 ADA_USDT 		= 52;
	 ZEC_USDT 		= 53;
	 QTUM_USDT 		= 54;
	 NANO_USDT 		= 55;
	 ETC_USDT 		= 56;
	 XMR_USDT 		= 57;
	 OMG_USDT 		= 58;
	 DASH_USDT 		= 59;
	 NEO_USDT 		= 60;
     BTC_BRL 		= 61;	 	 
   }
  
   enum OrderState {
	STARTED           = 0;
	PLACED            = 1;
	CANCELED          = 2;
	PARTIAL           = 3;
	FILLED            = 4;
	REJECTED          = 5;
	EXPIRED           = 6;
	REQUEST_ADD       = 7;
	REQUEST_MODIFY    = 8;  
	REQUEST_CANCEL    = 9;
   }
  
   enum OrderTypeFilling {
	FOK           = 0;
	IOC           = 1;
	RETURN        = 2;
   }
  
   enum Reason {
	ORDER_CLIENT        = 0;
	ORDER_MOBILE        = 1;
	ORDER_WEB           = 2;
	ORDER_STRATEGY      = 3;
	ORDER_SL            = 4;
	ORDER_TP            = 5;
	ORDER_SO            = 6;
   } 
  
   enum OrderTypeTime {
	GTC              = 0;
	DAY              = 1;
	SPECIFIED        = 2;
	SPECIFIED_DAY    = 3;
   } 
  
	enum OrderEntryType {
	IN                = 0;
	OUT               = 1; 
	INOUT             = 2;  
	OUT_BY            = 3;
   }

   enum Side {
	BUY                = 0;
	SELL               = 1; 
   }

   enum OrderType {
	MARKET         = 0; 
	LIMIT          = 1;  
	STOP           = 2;
	STOP_LIMIT     = 3;
	CLOSING_BY     = 4;
   }

   enum DealType {
	POSITION                = 0;  
	BALANCE                 = 1;  
	CREDIT                  = 2;
	CHARGE                  = 3;
	CORRECTION              = 4;
	BONUS                   = 5;
	COMMISSION              = 6;
	INTEREST                = 7;
	BUY_CANCELED            = 8;
	SELL_CANCELED           = 9;
	DIVIDEND                = 10;
   }

  enum TradeAction {
	DEAL        = 0;
	PENDING     = 1;
	SLTP        = 2;
	MODIFY      = 3;
	REMOVE      = 4;
	CLOSE_BY    = 5;
   }

   enum Retcode {
	REJECTX                        = 0;
	REJECT                         = 2;
	CANCEL                         = 3;
	PLACED_TRADE                   = 4;
	DONE                           = 5;
	DONE_PARTIAL                   = 6;
	ERROR                          = 7;
	TIMEOUT                        = 8;
	INVALID                        = 9;
	INVALID_VOLUME                 = 10;
	INVALID_PRICE                  = 11;
	INVALID_STOPS                  = 12;
	TRADE_DISABLED                 = 13;
	MARKET_CLOSED                  = 14;
	NO_MONEY                       = 15;
	PRICE_CHANGED                  = 16;
	PRICE_OFF                      = 17;
	INVALID_EXPIRATION             = 18;
	ORDER_CHANGED                  = 19;
	TOO_MANY_REQUESTS              = 21;
	NO_CHANGES                     = 22;
	SERVER_DISABLES_AT             = 23;
	CLIENT_DISABLES_AT             = 24;
	LOCKED                         = 25;
	FROZEN                         = 26;
	INVALID_FILL                   = 27;
	CONNECTION                     = 28;
	ONLY_REAL                      = 29;
	LIMIT_ORDERS                   = 30;
	LIMIT_VOLUME                   = 31;
	INVALID_ORDER                  = 32;
	POSITION_CLOSED                = 33;
	CLOSE_ORDER_EXIST              = 34;
	LIMIT_POSITIONS                = 35;
	REJECT_CANCEL                  = 36;
	LONG_ONLY                      = 37;
	SHORT_ONLY                     = 38;
	CLOSE_ONLY                     = 39;
	REQUEST_WITH_NO_TOKEN          = 40;
	INVALID_TOKEN                  = 41;
	INVALID_REQUEST                = 42;
   };

 enum GranularityTime{
	TIME_0              = 0;
	TIME_5S  			= 5;
	TIME_10S  			= 10;
	TIME_15S  			= 15;
	TIME_30S  			= 30;
	TIME_1M  			= 60;
	TIME_2M  			= 120;
	TIME_3M  			= 180;
	TIME_4M  			= 240;
	TIME_5M  			= 300;
	TIME_6M  			= 360;
	TIME_7M  			= 420;
	TIME_8M  			= 480;
	TIME_9M  			= 540;
	TIME_10M  			= 600;
	TIME_15M  			= 900;
	TIME_20M  			= 1200;
	TIME_30M  			= 1800;
	TIME_40M  			= 2400;
	TIME_50M  			= 3000;
	TIME_1H  			= 3600;
	TIME_2H  			= 7200;
	TIME_3H  			= 10800;
	TIME_4H  			= 14400;
	TIME_5H  			= 18000;
	TIME_6H  			= 21600;
	TIME_7H  			= 25200;
	TIME_8H  			= 28800;
	TIME_9H  			= 32400;
	TIME_10H  			= 36000;
	TIME_11H  			= 39600;
	TIME_12H  			= 43200;
	TIME_1D  			= 86400;
};

   enum GranularityTick{
	TICK_0  		    = 0;
	TICK_1  		    = 1;
	TICK_5  		    = 5;
	TICK_10  		    = 10;
	TICK_15  			= 15;
	TICK_20  		    = 20;
	TICK_30  	    	= 30;
	TICK_50    			= 50;
	TICK_100  			= 100;
	TICK_150  			= 150;
	TICK_200  			= 200;
	TICK_250  			= 250;
	TICK_300  			= 300;
	TICK_350  			= 350;
	TICK_400  			= 400;
	TICK_450  			= 450;
	TICK_500  			= 500;
	TICK_1000  			= 1000;
	TICK_1500  			= 1500;
	TICK_2000  			= 2000;
	TICK_3000  			= 3000;
	TICK_4000  			= 4000;
	TICK_5000  			= 5000;
	TICK_10000  		= 10000;
};

   enum GranularityVolume{
	VOL_0  			    = 0;
	VOL_1  			    = 1;
	VOL_5  			    = 5;
	VOL_10  		    = 10;
	VOL_15  			= 15;
	VOL_20  		    = 20;
	VOL_30  	    	= 30;
	VOL_50    			= 50;
	VOL_100  			= 100;
	VOL_150  			= 150;
	VOL_200  			= 200;
	VOL_250  			= 250;
	VOL_300  			= 300;
	VOL_350  			= 350;
	VOL_400  			= 400;
	VOL_450  			= 450;
	VOL_500  			= 500;
	VOL_1000  			= 1000;
	VOL_1500  			= 1500;
	VOL_2000  			= 2000;
	VOL_3000  			= 3000;
	VOL_4000  			= 4000;
	VOL_5000  			= 5000;
	VOL_10000  			= 10000;
};

   enum GranularityMoney{
	MONEY_0  			   	= 0;
	MONEY_100  			    = 1000;
	MONEY_5000  		   	= 5000;
	MONEY_10000  			= 10000;
	MONEY_15000 	    	= 15000;
	MONEY_30000  	    	= 30000;
	MONEY_60000    			= 60000;
	MONEY_100000  			= 100000;
	MONEY_150000  			= 150000;
	MONEY_200000  			= 200000;
	MONEY_250000  			= 250000;
	MONEY_300000  			= 300000;
	MONEY_400000  			= 400000;
	MONEY_500000  			= 500000;
	MONEY_1000000  			= 1000000;
	MONEY_1500000  			= 1500000;
	MONEY_2000000  			= 2000000;
	MONEY_2500000  			= 2500000;
	MONEY_3000000  			= 3000000;
	MONEY_3500000  			= 3500000;
	MONEY_4000000  			= 4000000;
	MONEY_4500000  			= 4500000;
	MONEY_5000000  			= 5000000;
	MONEY_10000000  		= 10000000;
};

  enum CandleGroupBy{
	TIME        = 0;
	TICK        = 1;
	VOLUME      = 2;
	MONEY       = 3;
  };

  enum BacktestingCode{
	START      = 0;
	NEXT       = 1;
	FINISHED   = 2;
  };