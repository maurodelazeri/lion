syntax = "proto3";
package api;
import "enum.proto";

// The API service definition.
service API {   
  rpc GetCurrencies(CurrencyRequest) returns (CurrencyResponse) {}
  rpc GetProducts(ProductRequest) returns (ProductResponse) {}
  rpc GetVenues(VenuesRequest) returns (VenuesResponse) {}
  rpc GetVenueDetail(VenueDetailedRequest) returns (VenueDetailedResponse) {}
  rpc GetVenueProductDetail(VenueProductRequest) returns (VenueProductResponse) {}
} 

// Currency
message CurrencyRequest { 
}

message CurrencyInfo{ 
   int32                        id                    = 1;  
   string                       name                  = 2;  
   int32                        currency_id           = 3;
}

message CurrencyResponse { 
   Retcode                      retcode                = 1;  
   repeated CurrencyInfo        currencies             = 2;
   string                       comment                = 3;
}

// Products
message ProductRequest { 
}

message ProductInfo{ 
   int32                        id                    = 1;  
   string                       name                  = 2;  
   int32                        product_id            = 3;
}

message ProductResponse { 
   Retcode                      retcode                = 1;  
   repeated ProductInfo         products               = 2;
   string                       comment                = 3;
}

// Venues
message VenuesRequest { 
}

message VenuesInfo{ 
   int32                        id                    = 1;  
   string                       name                  = 2;  
   int32                        venue_id              = 3;
   bool                         enabled               = 4;
}

message VenuesResponse { 
   Retcode                      retcode                = 1;  
   repeated VenuesInfo          venues                 = 2;
   string                       comment                = 3;
}

// Venues Detailed
message VenueDetailedRequest {
       string                             venue_name               = 1;  
}

message VenueDetailedResponse { 
   Retcode                                retcode               = 1;  
   int32                                  id                    = 2;  
   string                                 name                  = 3;  
   int32                                  venue_id              = 4;
   bool                                   enabled               = 5;
   string                                 api_key               = 6;
   string                                 api_secret            = 7;
   string                                 passphrase            = 8;
   repeated VenueDetailedProduct          product_info          = 9;
   string                                 comment               = 10;
}

message VenueDetailedProduct{
   int32                        id                       = 1;  
   int32                        product                  = 2;  
   bool                         enabled                  = 3;  
   bool                         individual_connection    = 4;
   string                       venue_name               = 5;
   string                       api_name                 = 6;
   double                       minimum_orders_size      = 7;
   double                       step_size                = 8;
   double                       maker_fee                = 9;
   double                       taker_fee                = 10;
}

// Venue Product
message VenueProductRequest {
       string                             venue_name               = 1;  
       string                             product_name             = 2;  
}

message VenueProductResponse { 
   Retcode                      retcode                  = 1;  
   int32                        id                       = 2;  
   int32                        product                  = 3;  
   bool                         enabled                  = 4;  
   bool                         individual_connection    = 5;
   string                       venue_name               = 6;
   string                       api_name                 = 7;
   double                       minimum_orders_size      = 8;
   double                       step_size                = 9;
   double                       maker_fee                = 10;
   double                       taker_fee                = 11;
   string                       comment                  = 12;
}