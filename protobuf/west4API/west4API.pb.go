// Code generated by protoc-gen-go. DO NOT EDIT.
// source: west4API.proto

package west4API

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

func init() { proto.RegisterFile("west4API.proto", fileDescriptor_81ea3877c7e6a19f) }

var fileDescriptor_81ea3877c7e6a19f = []byte{
	// 102 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x4f, 0x2d, 0x2e,
	0x31, 0x71, 0x0c, 0xf0, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0xa5, 0xf8,
	0x93, 0xf3, 0xf3, 0x4a, 0x12, 0x33, 0xf3, 0x52, 0x8b, 0x20, 0x52, 0x46, 0xbe, 0x5c, 0x70, 0x49,
	0x21, 0x47, 0x2e, 0x96, 0x90, 0xd4, 0xe2, 0x12, 0x21, 0x29, 0x3d, 0xb8, 0x7e, 0x67, 0x98, 0xf2,
	0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x29, 0x69, 0xac, 0x72, 0xc5, 0x05, 0xf9, 0x79, 0xc5,
	0xa9, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x53, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x99, 0xb6,
	0xbf, 0xd8, 0x82, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// West4APIClient is the client API for West4API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type West4APIClient interface {
	Test(ctx context.Context, in *ContainerRequest, opts ...grpc.CallOption) (*ContainerResponse, error)
}

type west4APIClient struct {
	cc *grpc.ClientConn
}

func NewWest4APIClient(cc *grpc.ClientConn) West4APIClient {
	return &west4APIClient{cc}
}

func (c *west4APIClient) Test(ctx context.Context, in *ContainerRequest, opts ...grpc.CallOption) (*ContainerResponse, error) {
	out := new(ContainerResponse)
	err := c.cc.Invoke(ctx, "/west4API.west4API/Test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// West4APIServer is the server API for West4API service.
type West4APIServer interface {
	Test(context.Context, *ContainerRequest) (*ContainerResponse, error)
}

func RegisterWest4APIServer(s *grpc.Server, srv West4APIServer) {
	s.RegisterService(&_West4API_serviceDesc, srv)
}

func _West4API_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(West4APIServer).Test(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/west4API.west4API/Test",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(West4APIServer).Test(ctx, req.(*ContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _West4API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "west4API.west4API",
	HandlerType: (*West4APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Test",
			Handler:    _West4API_Test_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "west4API.proto",
}
